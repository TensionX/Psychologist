{"version":3,"sources":["img/sprite.svg","services/api.js","redux/user/user.actions.js","redux/user/user.operation.js","redux/user/user.selectors.js","components/buttons/BtnBlue.js","components/singIn/styleBtnSign.js","components/container/Container.js","components/spiner/Spiner.js","components/singIn/SingIn.js","components/singUp/styleBtnSign.js","components/singUp/SingUp.js","components/buttons/BtnRed.js","components/row/Row.js","components/row/TableHeader.js","components/buttons/BtnWhite.js","components/modal/stylebtnModal.js","components/modal/AddClientModal.js","components/header/Header.js","components/clients/Clients.js","components/modal/AddTestsModal.js","components/modal/EditTestsModal.js","components/modal/AssignTestsModal.js","components/tests/Tests.js","components/takeTest/ActiveTest.js","components/modal/CommentTestModal.js","components/clientResults/ClientResults.js","components/error/Error.js","components/Route/PrivateRoute.js","components/Route/PublicRoute.js","App.js","redux/user/user.reducer.js","redux/root.reducer.js","redux/store.js","index.js","components/singUp/SignUp.module.css","components/singIn/SignIn.module.css","components/header/Header.module.css","components/row/Row.module.css","components/buttons/BtnWhite.module.css","components/buttons/BtnBlue.module.css","components/container/Container.module.css","components/buttons/BtnRed.module.css","components/buttons/BtnGrey.module.css","components/clients/Clients.module.css","components/tests/Tests.module.css","components/takeTest/Tests.module.css","components/clientResults/Tests.module.css","components/modal/AddModal.module.css"],"names":["clientApi","axios","create","withCredentials","signin","data","a","post","then","result","catch","reason","response","signup","logout","refreshSession","get","getClients","addClient","removeClient","addTest","editTest","removeTest","getTests","assignTest","getActiveTest","answerActiveTest","clientTests","clientTestComment","signUpRequest","createAction","signUpSuccess","signUpError","signInRequest","signInSuccess","signInError","logoutRequest","refreshSessionRequest","refreshSessionSuccess","refreshSessionError","getClientsRequest","getClientsSuccess","getClientsError","removeClientRequest","removeClientSuccess","removeClientError","addClientRequest","addClientSuccess","addClientError","addTestRequest","addTestSuccess","addTestError","editTestRequest","editTestSuccess","editTestError","removeTestRequest","removeTestSuccess","removeTestError","getTestsRequest","getTestsSuccess","getTestsError","assignTestRequest","assignTestSuccess","assignTestError","getActiveTestRequest","getActiveTestSuccess","getActiveTestError","answerActiveTestRequest","answerActiveTestSuccess","answerActiveTestError","clientTestsRequest","clientTestsSuccess","clientTestsError","clientTestCommentRequest","clientTestCommentSuccess","clientTestCommentError","resetError","errorHandler","status","dispatch","getClientsOperation","message","clients","error","addClientOperation","getTestsOperation","addTestOperation","editTestOperation","assignTestOperation","clientTestsOperation","tests","clientTestCommentOperation","getUser","state","user","getClientTests","activeTest","errorMsg","getLoading","loading","BtnBlue","icon","name","btnStyle","iconStyle","disable","onClick","rowid","disabled","style","className","flex","stylebtnSign","active","width","height","fontSize","fontWeight","color","background","border","activeOutForm","margin","Container","children","container","Spiner","SignIn","useState","password","setPassword","email","setEmail","useDispatch","navigate","useNavigate","useEffect","useSelector","flexSpiner","authForm","header","onSubmit","e","preventDefault","signInOperation","form","formHeader","label","length","nameField","type","value","onChange","currentTarget","input","btn","display","SignUp","firstName","setFirstName","lastName","setLastName","signUpOperation","BtnRed","id","Row","togleEdit","togleAssign","isAdmin","showComment","setShowComment","row","borderRight","FirstName","LastName","Email","textAlign","justifyContent","to","borderColor","marginRight","padding","borderRadius","getAttribute","questions","assigns","cursor","onPointerEnter","onPointerLeave","position","comments","TableHeader","BtnWhite","href","sprite","styleBtn","btnName","bottom","left","boxShadow","zIndex","btnTime","btnCancel","btnSave","btnDisable","AddClientModal","togleModal","messageEdit","companyId","handleChange","handleSubmit","bgModal","head","btnFlex","Header","Creator","console","log","nav","rightSide","paddingRight","logOut","Clients","isOpenAdd","setIsOpenAdd","togleAdd","flexDirection","map","client","AddTestsModal","setQuestions","testName","setTestName","question","removeQuestion","Object","entries","q","uuid","testId","t","addQuestionEdit","AssignTestsModal","clientId","setClientId","options","c","Tests","isOpenEdit","setIsOpenEdit","isOpenAssign","setIsOpenAssign","testToEdit","setTestToEdit","testToAssign","setTestToAssign","test","EditTestsModal","ActiveTest","useSearchParams","searchParams","answers","setAnswers","target","paddingBottom","answ","push","answer","creatorId","creatorid","CommentTestModal","comment","setComment","assignId","rows","resize","minHeight","maxHeight","ClientResults","isOpenComment","setIsOpenComment","testToComment","setTestToComment","togleComment","marginBottom","mark","totalMark","notifyErrorOptions","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","Error","authError","toast","newestOnTop","rtl","pauseOnFocusLoss","PrivateRoute","PublicRoute","App","exat","path","element","SingIn","SingUp","userReducer","createReducer","_","payload","__","clientsReducer","testsReducer","clientTestsReducer","activeTestReducer","rootReducer","combineReducers","store","configureStore","reducer","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.2a49933a.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/sprite.8f862188.svg\";","import axios from \"axios\";\r\n\r\n// const clientApi = axios.create({\r\n//   baseURL: 'http://localhost:4000',\r\n//   withCredentials: true\r\n// })\r\nconst clientApi = axios.create({\r\n  withCredentials: true,\r\n  // baseURL: 'https://cloudki.herokuapp.com',\r\n})\r\n\r\nexport const signin = async (data) =>\r\n  clientApi\r\n    .post(\"/api/auth/signin\", data)\r\n    .then((result) => result)\r\n    .catch((reason) => reason.response)\r\n\r\nexport const signup = async (data) =>\r\n    clientApi\r\n      .post(\"/api/auth/signup\", data)\r\n      .then((result) => result)\r\n      .catch((reason) => reason.response)\r\n      \r\nexport const logout = async () =>\r\n  clientApi\r\n    .post(\"/api/auth/logout\")\r\n    .then((result) => result)\r\n    .catch((reason) => reason.response)\r\n\r\nexport const refreshSession = async () =>\r\n    clientApi\r\n      .get(\"/api/auth/refreshSession\")\r\n      .then((result) => result)\r\n      .catch((reason) => reason.response)\r\n\r\nexport const getClients = async () =>\r\n    clientApi\r\n      .get(\"/api/clients/\")\r\n      .then((result) => result)\r\n      .catch((reason) => reason.response)\r\n\r\nexport const addClient = async (data) =>\r\n    clientApi\r\n      .post(\"/api/clients/\", data)\r\n      .then((result) => result)\r\n      .catch((reason) => reason.response)\r\n\r\nexport const removeClient = async (data) =>\r\n    clientApi\r\n      .post(\"/api/clients/delete\", data)\r\n      .then((result) => result)\r\n      .catch((reason) => reason.response)\r\n\r\nexport const addTest = async (data) =>\r\n    clientApi\r\n      .post(\"/api/tests/add\", data)\r\n      .then((result) => result)\r\n      .catch((reason) => reason.response)\r\n\r\nexport const editTest = async (data) =>\r\n    clientApi\r\n      .post(\"/api/tests/edit\", data)\r\n      .then((result) => result)\r\n      .catch((reason) => reason.response)\r\n\r\nexport const removeTest = async (data) =>\r\n    clientApi\r\n      .post(\"/api/tests/remove\", data)\r\n      .then((result) => result)\r\n      .catch((reason) => reason.response)\r\n\r\nexport const getTests = async () =>\r\n    clientApi\r\n      .get(\"/api/tests/all\")\r\n      .then((result) => result)\r\n      .catch((reason) => reason.response)\r\n\r\nexport const assignTest = async (data) =>\r\n    clientApi\r\n      .post(\"/api/tests/assign\", data)\r\n      .then((result) => result)\r\n      .catch((reason) => reason.response)\r\n\r\nexport const getActiveTest = async (data) =>\r\n    clientApi\r\n      .post(\"/api/tests/getActive\", data)\r\n      .then((result) => result)\r\n      .catch((reason) => reason.response)\r\n\r\nexport const answerActiveTest = async (data) =>\r\n    clientApi\r\n      .post(\"/api/tests/answerActive\", data)\r\n      .then((result) => result)\r\n      .catch((reason) => reason.response)\r\n\r\nexport const clientTests = async (data) =>\r\n    clientApi\r\n      .post(\"/api/tests/clientTests\", data)\r\n      .then((result) => result)\r\n      .catch((reason) => reason.response)\r\n\r\nexport const clientTestComment = async (data) =>\r\n    clientApi\r\n      .post(\"/api/tests/clientTestComment\", data)\r\n      .then((result) => result)\r\n      .catch((reason) => reason.response)\r\n\r\n","import { createAction } from \"@reduxjs/toolkit\";\r\n\r\nconst signUpRequest = createAction(\"Auth/signUpRequest\");\r\nconst signUpSuccess = createAction(\"Auth/signUpSuccess\");\r\nconst signUpError = createAction(\"Auth/signUpError\");\r\n\r\nconst signInRequest = createAction(\"Auth/signInRequest\");\r\nconst signInSuccess = createAction(\"Auth/signInSuccess\");\r\nconst signInError = createAction(\"Auth/signInError\");\r\n\r\nconst logoutRequest = createAction(\"Auth/logoutRequest\");\r\n\r\nconst refreshSessionRequest = createAction(\"User/refreshSessionRequest\");\r\nconst refreshSessionSuccess = createAction(\"User/refreshSessionSecces\");\r\nconst refreshSessionError = createAction(\"User/refreshSessionError\");\r\n\r\nconst getClientsRequest = createAction(\"User/getClientsRequest\");\r\nconst getClientsSuccess = createAction(\"User/getClientsSecces\");\r\nconst getClientsError = createAction(\"User/getClientsError\");\r\n\r\nconst removeClientRequest = createAction(\"User/removeClientRequest\");\r\nconst removeClientSuccess = createAction(\"User/removeClientSecces\");\r\nconst removeClientError = createAction(\"User/removeClientError\");\r\n\r\nconst addClientRequest = createAction(\"User/addClientRequest\");\r\nconst addClientSuccess = createAction(\"User/addClientSecces\");\r\nconst addClientError = createAction(\"User/addClientError\");\r\n\r\nconst addTestRequest = createAction(\"User/addTestRequest\");\r\nconst addTestSuccess = createAction(\"User/addTestSecces\");\r\nconst addTestError = createAction(\"User/addTestError\");\r\n\r\nconst editTestRequest = createAction(\"User/editTestRequest\");\r\nconst editTestSuccess = createAction(\"User/editTestSecces\");\r\nconst editTestError = createAction(\"User/editTestError\");\r\n\r\nconst removeTestRequest = createAction(\"User/removeTestRequest\");\r\nconst removeTestSuccess = createAction(\"User/removeTestSecces\");\r\nconst removeTestError = createAction(\"User/removeTestError\");\r\n\r\nconst getTestsRequest = createAction(\"User/getTestsRequest\");\r\nconst getTestsSuccess = createAction(\"User/getTestsSecces\");\r\nconst getTestsError = createAction(\"User/getTestsError\");\r\n\r\nconst assignTestRequest = createAction(\"User/assignTestRequest\");\r\nconst assignTestSuccess = createAction(\"User/assignTestSecces\");\r\nconst assignTestError = createAction(\"User/assignTestError\");\r\n\r\nconst getActiveTestRequest = createAction(\"User/getActiveTestRequest\");\r\nconst getActiveTestSuccess = createAction(\"User/getActiveTestSecces\");\r\nconst getActiveTestError = createAction(\"User/getActiveTestError\");\r\n\r\nconst answerActiveTestRequest = createAction(\"User/answerActiveTestRequest\");\r\nconst answerActiveTestSuccess = createAction(\"User/answerActiveTestSecces\");\r\nconst answerActiveTestError = createAction(\"User/answerActiveTestError\");\r\n\r\nconst clientTestsRequest = createAction(\"User/clientTestsRequest\");\r\nconst clientTestsSuccess = createAction(\"User/clientTestsSecces\");\r\nconst clientTestsError = createAction(\"User/clientTestsError\");\r\n\r\nconst clientTestCommentRequest = createAction(\"User/clientTestCommentRequest\");\r\nconst clientTestCommentSuccess = createAction(\"User/clientTestCommentSecces\");\r\nconst clientTestCommentError = createAction(\"User/clientTestCommentError\");\r\n\r\nconst resetError = createAction(\"Auth/resetError\");\r\n\r\nexport {\r\n  signUpRequest,\r\n  signUpSuccess,\r\n  signUpError,\r\n  signInRequest,\r\n  signInSuccess,\r\n  signInError,\r\n  logoutRequest,\r\n  refreshSessionRequest,\r\n  refreshSessionSuccess,\r\n  refreshSessionError,\r\n  getClientsRequest,\r\n  getClientsSuccess,\r\n  getClientsError,\r\n  removeClientRequest,\r\n  removeClientSuccess,\r\n  removeClientError,\r\n  addClientRequest,\r\n  addClientSuccess,\r\n  addClientError,\r\n  addTestRequest,\r\n  addTestSuccess,\r\n  addTestError,\r\n  editTestRequest,\r\n  editTestSuccess,\r\n  editTestError,\r\n  removeTestRequest,\r\n  removeTestSuccess,\r\n  removeTestError,\r\n  getTestsRequest,\r\n  getTestsSuccess,\r\n  getTestsError,\r\n  assignTestRequest,\r\n  assignTestSuccess,\r\n  assignTestError,\r\n  getActiveTestRequest,\r\n  getActiveTestSuccess,\r\n  getActiveTestError,\r\n  answerActiveTestRequest,\r\n  answerActiveTestSuccess,\r\n  answerActiveTestError,\r\n  clientTestsRequest,\r\n  clientTestsSuccess,\r\n  clientTestsError,\r\n  clientTestCommentRequest,\r\n  clientTestCommentSuccess,\r\n  clientTestCommentError,\r\n  resetError,\r\n};\r\n","import {\r\n  signin, \r\n  signup,\r\n  logout,\r\n  refreshSession,\r\n  getClients,\r\n  addClient,\r\n  removeClient,\r\n  addTest,\r\n  editTest,\r\n  removeTest,\r\n  getTests,\r\n  assignTest,\r\n  getActiveTest,\r\n  answerActiveTest,\r\n  clientTests,\r\n  clientTestComment\r\n} from \"../../services/api\";\r\nimport {\r\n  signUpRequest,\r\n  signUpSuccess,\r\n  signUpError,\r\n  \r\n  signInRequest,\r\n  signInSuccess,\r\n  signInError,\r\n\r\n  logoutRequest,\r\n\r\n  refreshSessionRequest,\r\n  refreshSessionSuccess,\r\n  refreshSessionError,\r\n\r\n  getClientsRequest,\r\n  getClientsSuccess,\r\n  getClientsError,\r\n  removeClientRequest,\r\n  removeClientSuccess,\r\n  removeClientError,\r\n  addClientRequest,\r\n  addClientSuccess,\r\n  addClientError,\r\n\r\n  addTestRequest,\r\n  addTestSuccess,\r\n  addTestError,\r\n  editTestRequest,\r\n  editTestSuccess,\r\n  editTestError,\r\n  removeTestRequest,\r\n  removeTestSuccess,\r\n  removeTestError,\r\n  getTestsRequest,\r\n  getTestsSuccess,\r\n  getTestsError,\r\n\r\n  assignTestRequest,\r\n  assignTestSuccess,\r\n  assignTestError,\r\n\r\n  getActiveTestRequest,\r\n  getActiveTestSuccess,\r\n  getActiveTestError,\r\n\r\n  answerActiveTestRequest,\r\n  answerActiveTestSuccess,\r\n  answerActiveTestError,\r\n\r\n  clientTestsRequest,\r\n  clientTestsSuccess,\r\n  clientTestsError,\r\n\r\n  clientTestCommentRequest,\r\n  clientTestCommentSuccess,\r\n  clientTestCommentError,\r\n} from \"./user.actions\";\r\nimport { toast } from 'react-toastify'\r\n\r\nconst errorHandler = (status, dispatch) => {\r\n  if(status === 401){\r\n    dispatch(logoutRequest())\r\n  }\r\n};\r\n\r\nexport const signUpOperation =\r\n  ({ email, password, firstName, lastName }) =>\r\n  (dispatch) => {\r\n    dispatch(signUpRequest());\r\n    signup({ email, password, firstName, lastName })\r\n      .then((result) => {\r\n        if (result.status !== 200) {\r\n          errorHandler(result.status, dispatch)\r\n          dispatch(signUpError(result.data.message));\r\n        } else {\r\n          dispatch(signUpSuccess());\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        dispatch(signUpError(error.message));\r\n      });\r\n};\r\n\r\nexport const signInOperation =\r\n  ({ email, password }) =>\r\n  (dispatch) => {\r\n    dispatch(signInRequest());\r\n    signin({ email, password })\r\n      .then((result) => {\r\n        if (result.status !== 200) {\r\n          errorHandler(result.status, dispatch)\r\n          dispatch(signInError(result.data.message));\r\n        } else {\r\n          dispatch(signInSuccess(result.data));\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        dispatch(signInError(error.message));\r\n      });\r\n};\r\n\r\nexport const logoutOperation = () => (dispatch) => {\r\n  logout()\r\n    .then((result) => {\r\n      dispatch(logoutRequest());\r\n    })\r\n    .catch((error) => {\r\n      console.log(error)\r\n    });\r\n};\r\n\r\nexport const refreshSessionOperation = () => (dispatch) => {\r\n  dispatch(refreshSessionRequest());\r\n  refreshSession()\r\n    .then((result) => {\r\n      if (result.status !== 200) {\r\n        errorHandler(result.status, dispatch)\r\n        dispatch(signInError(result.data.message));\r\n      } else {\r\n        dispatch(refreshSessionSuccess(result.data));\r\n        dispatch(signInSuccess(result.data));\r\n      }\r\n    })\r\n    .catch((error) => {\r\n      dispatch(refreshSessionError(error.message));\r\n    });\r\n};\r\n\r\nexport const getClientsOperation = () =>\r\n  (dispatch) => {\r\n    dispatch(getClientsRequest());\r\n    getClients()\r\n      .then((result) => {\r\n        if (result.status !== 200) {\r\n          errorHandler(result.status, dispatch)\r\n          dispatch(getClientsError(result.data.message));\r\n        } else {\r\n          dispatch(getClientsSuccess(result.data.clients));\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        dispatch(getClientsError(error.message));\r\n      });\r\n};\r\n\r\nexport const addClientOperation = (data) =>\r\n  (dispatch) => {\r\n    dispatch(addClientRequest());\r\n    addClient(data)\r\n      .then((result) => {\r\n        if (result.status !== 200) {\r\n          errorHandler(result.status, dispatch)\r\n          dispatch(addClientError(result.data.message));\r\n        } else {\r\n          dispatch(addClientSuccess(result.data.clients));\r\n          dispatch(getClientsOperation())\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        dispatch(addClientError(error.message));\r\n      });\r\n};\r\n\r\nexport const removeClientOperation = (id) =>\r\n  (dispatch) => {\r\n    dispatch(removeClientRequest());\r\n    removeClient({id})\r\n      .then((result) => {\r\n        if (result.status !== 200) {\r\n          errorHandler(result.status, dispatch)\r\n          dispatch(removeClientError(result.data.message));\r\n        } else {\r\n          dispatch(removeClientSuccess(result.data.clients));\r\n          dispatch(getClientsOperation())\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        dispatch(removeClientError(error.message));\r\n      });\r\n};\r\n\r\nexport const getTestsOperation = () =>\r\n  (dispatch) => {\r\n    dispatch(getTestsRequest());\r\n    getTests()\r\n      .then((result) => {\r\n        if (result.status !== 200) {\r\n          errorHandler(result.status, dispatch)\r\n          dispatch(getTestsError(result.data.message));\r\n        } else {\r\n          dispatch(getTestsSuccess(result.data.clients));\r\n          dispatch(getClientsOperation())\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        dispatch(getTestsError(error.message));\r\n      });\r\n};\r\n\r\nexport const addTestOperation = (data) =>\r\n  (dispatch) => {\r\n    dispatch(addTestRequest());\r\n    addTest(data)\r\n      .then((result) => {\r\n        if (result.status !== 200) {\r\n          errorHandler(result.status, dispatch)\r\n          dispatch(addTestError(result.data.message));\r\n        } else {\r\n          dispatch(addTestSuccess(result.data.clients));\r\n          dispatch(getTestsOperation())\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        dispatch(addTestError(error.message));\r\n      });\r\n};\r\n\r\nexport const editTestOperation = (data) =>\r\n  (dispatch) => {\r\n    dispatch(editTestRequest());\r\n    editTest(data)\r\n      .then((result) => {\r\n        if (result.status !== 200) {\r\n          errorHandler(result.status, dispatch)\r\n          dispatch(editTestError(result.data.message));\r\n        } else {\r\n          dispatch(editTestSuccess(result.data.clients));\r\n          dispatch(getTestsOperation())\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        dispatch(editTestError(error.message));\r\n      });\r\n};\r\n\r\nexport const removeTestOperation = (id) =>\r\n  (dispatch) => {\r\n    dispatch(removeTestRequest());\r\n    removeTest({id})\r\n      .then((result) => {\r\n        if (result.status !== 200) {\r\n          errorHandler(result.status, dispatch)\r\n          dispatch(removeTestError(result.data.message));\r\n        } else {\r\n          dispatch(removeTestSuccess(result.data.clients));\r\n          dispatch(getTestsOperation())\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        dispatch(removeTestError(error.message));\r\n      });\r\n};\r\n\r\nexport const assignTestOperation = (data) =>\r\n  (dispatch) => {\r\n    dispatch(assignTestRequest());\r\n    assignTest(data)\r\n      .then((result) => {\r\n        if (result.status !== 200) {\r\n          errorHandler(result.status, dispatch)\r\n          dispatch(assignTestError(result.data.message));\r\n        } else {\r\n          dispatch(assignTestSuccess(result.data.clients));\r\n          dispatch(getTestsOperation())\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        dispatch(assignTestError(error.message));\r\n      });\r\n};\r\n\r\nexport const getActiveTestOperation = (data) =>\r\n  (dispatch) => {\r\n    dispatch(getActiveTestRequest());\r\n    getActiveTest(data)\r\n      .then((result) => {\r\n        if (result.status !== 200) {\r\n          errorHandler(result.status, dispatch)\r\n          dispatch(getActiveTestError(result.data.message));\r\n        } else {\r\n          dispatch(getActiveTestSuccess(result.data.test));\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        dispatch(getActiveTestError(error.message));\r\n      });\r\n};\r\n\r\nexport const answerActiveTestOperation = (data) =>\r\n  (dispatch) => {\r\n    dispatch(answerActiveTestRequest());\r\n    answerActiveTest(data)\r\n      .then((result) => {\r\n        if (result.status !== 200) {\r\n          errorHandler(result.status, dispatch)\r\n          dispatch(answerActiveTestError(result.data.message));\r\n        } else {\r\n          dispatch(answerActiveTestSuccess(result.data.test));\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        dispatch(answerActiveTestError(error.message));\r\n      });\r\n};\r\n\r\nexport const clientTestsOperation = (data) =>\r\n  (dispatch) => {\r\n    dispatch(clientTestsRequest());\r\n    clientTests(data)\r\n      .then((result) => {\r\n        if (result.status !== 200) {\r\n          errorHandler(result.status, dispatch)\r\n          dispatch(clientTestsError(result.data.message));\r\n        } else {\r\n          dispatch(clientTestsSuccess(result.data.tests));\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        dispatch(clientTestsError(error.message));\r\n      });\r\n};\r\n\r\nexport const clientTestCommentOperation = (data) =>\r\n  (dispatch) => {\r\n    dispatch(clientTestCommentRequest());\r\n    clientTestComment(data)\r\n      .then((result) => {\r\n        if (result.status !== 200) {\r\n          errorHandler(result.status, dispatch)\r\n          dispatch(clientTestCommentError(result.data.message));\r\n        } else {\r\n          dispatch(clientTestCommentSuccess(result.data.tests));\r\n          dispatch(clientTestsOperation)\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        dispatch(clientTestCommentError(error.message));\r\n      });\r\n};","export const getUser = (state) => state.user;\r\n\r\nexport const getClients = (state) => state.clients;\r\n\r\nexport const getTests = (state) => state.tests;\r\n\r\nexport const getClientTests = (state) => state.clientTests;\r\n\r\nexport const getActiveTest = (state) => state.activeTest;\r\n\r\nexport const errorMsg = (state) => state.errorMsg;\r\n\r\nexport const getLoading = (state) => state.loading;","import sprite from \"../../img/sprite.svg\";\r\nimport style from \"./BtnBlue.module.css\";\r\n\r\nconst BtnBlue = ({ icon, name, iconStyle, btnStyle, disable, onClick, rowid }) => {\r\n  return (\r\n    <button rowid={rowid} onClick={onClick} disabled={disable} style={btnStyle} className={style.flex}>\r\n      <p rowid={rowid}>{name}</p>\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default BtnBlue;\r\n","export const stylebtnSign = {\r\n  active: {\r\n    width: \"470px\",\r\n    height: \"48px\",\r\n    fontSize: \"16px\",\r\n    fontWeight: \"600\",\r\n    color: \"#fff\",\r\n  },\r\n\r\n  disable: {\r\n    width: \"470px\",\r\n    height: \"48px\",\r\n    fontSize: \"16px\",\r\n    fontWeight: \"600\",\r\n    color: \"#fff\",\r\n    background: \"#d3d5da\",\r\n    border: \"1px solid #d3d5da\",\r\n  },\r\n  activeOutForm: {\r\n    width: \"470px\",\r\n    height: \"48px\",\r\n    fontSize: \"16px\",\r\n    fontWeight: \"600\",\r\n    color: \"#fff\",\r\n    margin: \"20px auto 0 auto\"\r\n  },\r\n};\r\n","import style from \"./Container.module.css\";\r\n\r\nfunction Container({ children }) {\r\n  return <div className={style.container}>{children}</div>;\r\n}\r\n\r\nexport default Container;\r\n","import \"./Spiner.css\";\r\n\r\nconst Spiner = ({style}) => {\r\n  return (\r\n    <div >\r\n      <div style={style} className=\"spinner icon-spinner-2\" aria-hidden=\"true\"></div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Spiner;\r\n","import { useEffect, useState } from \"react\";\r\nimport style from \"./SignIn.module.css\";\r\nimport sprite from \"../../img/sprite.svg\";\r\nimport { isValidEmail } from \"../../helpers/helpers\";\r\nimport { signInOperation } from \"../../redux/user/user.operation\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getErrorMsg, getLoading } from \"../../redux/user/user.selectors\";\r\nimport BtnBlue from \"../buttons/BtnBlue\";\r\nimport { stylebtnSign } from \"./styleBtnSign\";\r\nimport Container from \"../container/Container\";\r\nimport { signInError } from \"../../redux/user/user.actions\";\r\nimport Spiner from \"../spiner/Spiner\";\r\nimport { useSearchParams, useNavigate  } from \"react-router-dom\";\r\n\r\nconst SignIn = () => {\r\n  const [password, setPassword] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {}, [dispatch]);\r\n\r\n  const changePassword = (e) => {\r\n    setPassword(e.currentTarget.value);\r\n  }\r\n  const changeEmail = (e) => {\r\n    setEmail(e.currentTarget.value);\r\n  }\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    dispatch(signInOperation({ email, password }));\r\n    setEmail(\"\");\r\n    setPassword(\"\");\r\n  };\r\n\r\n  const toSignUp = () => {\r\n    navigate(\"/sign-up\")\r\n  }\r\n\r\n  const loading = useSelector(getLoading);\r\n\r\n  return (\r\n    <Container>\r\n      {loading ? (\r\n        <div className={style.flexSpiner}>\r\n          <Spiner style={{ color: \"black\", fontSize: \"4em\" }} />\r\n        </div>\r\n      ) : (\r\n        <div className={style.authForm}>\r\n          <h2 className={style.header}>Welcome to Psychologist</h2>\r\n          <form onSubmit={handleSubmit} className={style.form}>\r\n            <h3 className={style.formHeader}>Sign into your account</h3>\r\n            <label className={style.label}>\r\n              {\" \"}\r\n              <span\r\n                style={\r\n                  email.length <= 0\r\n                    ? { color: \"#ff8616\" }\r\n                    : null\r\n                }\r\n                className={style.nameField}\r\n              >\r\n                Email\r\n              </span>\r\n              <input\r\n                name=\"email\"\r\n                type=\"email\"\r\n                value={email}\r\n                onChange={changeEmail}\r\n                className={style.input}\r\n                style={\r\n                  email.length > 0\r\n                    ? { border: \"1px solid #d3d5da\" }\r\n                    : { color: \"#2b3135\", border: \"1px solid #ff8616\" }\r\n                }\r\n              ></input>\r\n            </label>\r\n            <label className={style.label}>\r\n              {\" \"}\r\n              <span\r\n                style={\r\n                  password.length < 8\r\n                    ? { color: \"#ff8616\" }\r\n                    : null\r\n                }\r\n                className={style.nameField}\r\n              >\r\n                Password\r\n              </span>\r\n              <input\r\n                name=\"password\"\r\n                type=\"password\"\r\n                value={password}\r\n                onChange={changePassword}\r\n                style={\r\n                  password.length < 8\r\n                    ? { border: \"1px solid #ff8616\" }\r\n                    : { color: \"#2b3135\", border: \"1px solid #d3d5da\" }\r\n                }\r\n                className={style.input}\r\n              ></input>\r\n            </label>\r\n            <div className={style.btn}>\r\n              <BtnBlue\r\n                disable={!(password.length > 8)}\r\n                name={\"Sign In\"}\r\n                iconStyle={{ display: \"none\" }}\r\n                btnStyle={\r\n                  password.length >= 8 && email.length\r\n                    ? stylebtnSign.active\r\n                    : stylebtnSign.disable\r\n                }\r\n              />\r\n            </div>\r\n          </form>\r\n          <BtnBlue\r\n            onClick={toSignUp}\r\n            name={\"Sign Up\"}\r\n            iconStyle={{ display: \"none\" }}\r\n            btnStyle={\r\n                stylebtnSign.activeOutForm\r\n            }\r\n          />\r\n        </div>\r\n      )}\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default SignIn;\r\n","export const stylebtnSign = {\r\n  active: {\r\n    width: \"470px\",\r\n    height: \"48px\",\r\n    fontSize: \"16px\",\r\n    fontWeight: \"600\",\r\n    color: \"#fff\",\r\n  },\r\n\r\n  disable: {\r\n    width: \"470px\",\r\n    height: \"48px\",\r\n    fontSize: \"16px\",\r\n    fontWeight: \"600\",\r\n    color: \"#fff\",\r\n    background: \"#d3d5da\",\r\n    border: \"1px solid #d3d5da\",\r\n  },\r\n  activeOutForm: {\r\n    width: \"470px\",\r\n    height: \"48px\",\r\n    fontSize: \"16px\",\r\n    fontWeight: \"600\",\r\n    color: \"#fff\",\r\n    margin: \"20px auto 0 auto\"\r\n  },\r\n};\r\n","import { useEffect, useState } from \"react\";\r\nimport style from \"./SignUp.module.css\";\r\nimport sprite from \"../../img/sprite.svg\";\r\nimport { isValidEmail } from \"../../helpers/helpers\";\r\nimport { signUpOperation } from \"../../redux/user/user.operation\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getErrorMsg, getLoading } from \"../../redux/user/user.selectors\";\r\nimport BtnBlue from \"../buttons/BtnBlue\";\r\nimport { stylebtnSign } from \"./styleBtnSign\";\r\nimport Container from \"../container/Container\";\r\nimport { signInError } from \"../../redux/user/user.actions\";\r\nimport Spiner from \"../spiner/Spiner\";\r\nimport { useSearchParams, useNavigate  } from \"react-router-dom\";\r\n\r\nconst SignUp = () => {\r\n  const [password, setPassword] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [firstName, setFirstName] = useState(\"\");\r\n  const [lastName, setLastName] = useState(\"\");\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n\r\n  }, [dispatch]);\r\n\r\n  const changePassword = (e) => {\r\n    setPassword(e.currentTarget.value);\r\n  }\r\n  const changeEmail = (e) => {\r\n    setEmail(e.currentTarget.value);\r\n  }\r\n  const changeFirstName = (e) => {\r\n    setFirstName(e.currentTarget.value);\r\n  }\r\n  const changeLastName = (e) => {\r\n    setLastName(e.currentTarget.value);\r\n  }\r\n\r\n  const toSignIn = () => {\r\n    navigate(\"/sign-in\")\r\n  }\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    dispatch(signUpOperation({ email, password, firstName, lastName }));\r\n    setEmail(\"\");\r\n    setPassword(\"\");\r\n    setFirstName (\"\");\r\n    setLastName(\"\");\r\n    navigate(\"/sign-in\")\r\n  };\r\n\r\n  const loading = useSelector(getLoading);\r\n\r\n  return (\r\n    <Container>\r\n      {loading ? (\r\n        <div className={style.flexSpiner}>\r\n          <Spiner style={{ color: \"black\", fontSize: \"4em\" }} />\r\n        </div>\r\n      ) : (\r\n        <div className={style.authForm}>\r\n          <h2 className={style.header}>Welcome to Psychologist</h2>\r\n          <form onSubmit={handleSubmit} className={style.form}>\r\n            <h3 className={style.formHeader}>Sign into your account</h3>\r\n            <label className={style.label}>\r\n              {\" \"}\r\n              <span\r\n                style={\r\n                  email.length\r\n                    ? null\r\n                    : { color: \"#ff8616\" }\r\n                }\r\n                className={style.nameField}\r\n              >\r\n                Email\r\n              </span>\r\n              <input\r\n                name=\"email\"\r\n                type=\"email\"\r\n                value={email}\r\n                onChange={changeEmail}\r\n                className={style.input}\r\n                style={\r\n                  email.length\r\n                    ? { border: \"1px solid #d3d5da\" }\r\n                    : { color: \"#2b3135\", border: \"1px solid #ff8616\" }\r\n                }\r\n              ></input>\r\n            </label>\r\n            <label className={style.label}>\r\n              {\" \"}\r\n              <span\r\n                style={\r\n                  password.length >= 8\r\n                    ? null\r\n                    : { color: \"#ff8616\" }\r\n                }\r\n                className={style.nameField}\r\n              >\r\n                Password\r\n              </span>\r\n              <input\r\n                name=\"password\"\r\n                type=\"password\"\r\n                value={password}\r\n                onChange={changePassword}\r\n                style={\r\n                  password.length < 8\r\n                    ? { border: \"1px solid #ff8616\" }\r\n                    : { color: \"#2b3135\", border: \"1px solid #d3d5da\" }\r\n                }\r\n                className={style.input}\r\n              ></input>\r\n            </label>\r\n            <label className={style.label}>\r\n              {\" \"}\r\n              <span\r\n                style={\r\n                  firstName.length\r\n                    ? null\r\n                    : { color: \"#ff8616\" }\r\n                }\r\n                className={style.nameField}\r\n              >\r\n                First name\r\n              </span>\r\n              <input\r\n                name=\"firstName\"\r\n                type=\"firstName\"\r\n                value={firstName}\r\n                onChange={changeFirstName}\r\n                style={\r\n                  firstName.length\r\n                    ? { border: \"1px solid #d3d5da\" }\r\n                    : { color: \"#2b3135\", border: \"1px solid #ff8616\" }\r\n                }\r\n                className={style.input}\r\n              ></input>\r\n            </label>\r\n            <label className={style.label}>\r\n              {\" \"}\r\n              <span\r\n                style={\r\n                  lastName.length\r\n                    ? null\r\n                    : { color: \"#ff8616\" }\r\n                }\r\n                className={style.nameField}\r\n              >\r\n                Last name\r\n              </span>\r\n              <input\r\n                name=\"lastName\"\r\n                type=\"lastName\"\r\n                value={lastName}\r\n                onChange={changeLastName}\r\n                style={\r\n                  lastName.length\r\n                    ? { border: \"1px solid #d3d5da\" }\r\n                    : { color: \"#2b3135\", border: \"1px solid #ff8616\" }\r\n                }\r\n                className={style.input}\r\n              ></input>\r\n            </label>\r\n            <div className={style.btn}>\r\n              <BtnBlue\r\n                disable={!(password.length > 8)}\r\n                name={\"Sign Up\"}\r\n                iconStyle={{ display: \"none\" }}\r\n                btnStyle={\r\n                  password.length >= 8 && email.length && firstName.length && lastName.length\r\n                    ? stylebtnSign.active\r\n                    : stylebtnSign.disable\r\n                }\r\n              />\r\n            </div>\r\n          </form>\r\n          <BtnBlue\r\n            onClick={toSignIn}\r\n            name={\"Sign In\"}\r\n            iconStyle={{ display: \"none\" }}\r\n            btnStyle={\r\n                stylebtnSign.activeOutForm\r\n            }\r\n          />\r\n        </div>\r\n      )}\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default SignUp;\r\n","import sprite from \"../../img/sprite.svg\";\r\nimport style from \"./BtnRed.module.css\";\r\n\r\nconst BtnRed = ({ icon, name, iconStyle, btnStyle, disable, onClick, rowid }) => {\r\n  return (\r\n    <button type=\"button\" rowid={rowid} id={rowid} onClick={onClick} disabled={disable} style={btnStyle} className={style.flex}>\r\n      <p rowid={rowid}>{name}</p>\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default BtnRed;","import style from \"./Row.module.css\";\r\nimport BtnRed from \"../buttons/BtnRed\"\r\nimport { useState } from \"react\"\r\nimport { removeClientOperation, removeTestOperation } from \"../../redux/user/user.operation\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Row = ({data, type, togleEdit, togleAssign, isAdmin}) => {\r\n    const dispatch = useDispatch();\r\n    const [showComment, setShowComment] = useState(false)\r\n    const removeClient = (e) => {\r\n        dispatch(removeClientOperation(e.currentTarget.getAttribute(\"rowid\")))\r\n    }\r\n    const removeTest = (e) => {\r\n        dispatch(removeTestOperation(e.currentTarget.getAttribute(\"rowid\")))\r\n    }\r\n\r\n    const onHoverEnter = (e) => {\r\n        setShowComment(true)\r\n    }\r\n    const onHoverLeave = (e) => {\r\n        setShowComment(false)\r\n    }\r\n\r\n    return (\r\n        <div className={style.row}>\r\n            {type === \"client\" ? (\r\n                <>\r\n                    <div style={{\r\n                        width: \"10%\",\r\n                        borderRight: \"1px solid grey\"\r\n                    }}>\r\n                        {data.id}\r\n                    </div>\r\n                    <div style={{\r\n                        width: \"25%\",\r\n                        borderRight: \"1px solid grey\"\r\n                    }}>\r\n                        {data.FirstName}\r\n                    </div>\r\n                    <div style={{\r\n                        width: \"25%\",\r\n                        borderRight: \"1px solid grey\"\r\n                    }}>\r\n                        {data.LastName}\r\n                    </div>\r\n                    <div style={{\r\n                        width: \"25%\",\r\n                        borderRight: \"1px solid grey\"\r\n                    }}>\r\n                        {data.Email}\r\n                    </div>\r\n                    <div style={{\r\n                        width: \"15%\",\r\n                        textAlign: \"center\",\r\n                        display: \"flex\",\r\n                        justifyContent: \"center\"\r\n                    }}>\r\n                        <Link to={\"/clients/test?id=\"+data.id} style={{\r\n                            width: \"40%\",\r\n                            height: \"18px\",\r\n                            color: \"white\",\r\n                            fontSize: \"14px\",\r\n                            background: \"grey\",\r\n                            borderColor: \"grey\",\r\n                            marginRight: \"5px\",\r\n                            padding: \"2.1px 10px\",\r\n                            borderRadius: \"4px\"\r\n                        }}>Open results</Link>\r\n                        <BtnRed rowid={data.id} onClick={removeClient} name={\"Delete\"} btnStyle={{\r\n                            width: \"30%\",\r\n                            height: \"100%\",\r\n                            color: \"white\"\r\n                        }}/>\r\n                    </div>\r\n                </>\r\n            ) : (\r\n                type === \"test\" && isAdmin ? (\r\n                    <>\r\n                        <div style={{\r\n                            width: \"10%\",\r\n                            borderRight: \"1px solid grey\"\r\n                        }}>\r\n                            {data.id}\r\n                        </div>\r\n                        <div style={{\r\n                            width: \"25%\",\r\n                            borderRight: \"1px solid grey\"\r\n                        }}>\r\n                            {data.name}\r\n                        </div>\r\n                        <div style={{\r\n                            width: \"25%\",\r\n                            borderRight: \"1px solid grey\"\r\n                        }}>\r\n                            {data.questions.length}\r\n                        </div>\r\n                        <div style={{\r\n                            width: \"25%\",\r\n                            borderRight: \"1px solid grey\"\r\n                        }}>\r\n                            {data.assigns}\r\n                        </div>\r\n                        <div style={{\r\n                            width: \"15%\",\r\n                            textAlign: \"center\"\r\n                        }}>\r\n                            <BtnRed rowid={data.id} onClick={togleEdit} name={\"Edit\"} btnStyle={{\r\n                                width: \"30%\",\r\n                                height: \"100%\",\r\n                                color: \"white\",\r\n                                background: \"grey\",\r\n                                borderColor: \"grey\",\r\n                                marginRight: \"5px\"\r\n                            }}/>\r\n                            <BtnRed rowid={data.id} onClick={togleAssign} name={\"Assign\"} btnStyle={{\r\n                                width: \"30%\",\r\n                                height: \"100%\",\r\n                                color: \"white\",\r\n                                background: \"grey\",\r\n                                borderColor: \"grey\",\r\n                                marginRight: \"5px\"\r\n                            }}/>\r\n                            <BtnRed rowid={data.id} onClick={removeTest} name={\"Delete\"} btnStyle={{\r\n                                width: \"30%\",\r\n                                height: \"100%\",\r\n                                color: \"white\",\r\n                            }}/>\r\n                        </div>\r\n                    </>\r\n                ) : (\r\n                    <>\r\n                        <div style={{\r\n                            width: \"10%\",\r\n                            borderRight: \"1px solid grey\"\r\n                        }}>\r\n                            {data.id}\r\n                        </div>\r\n                        <div style={{\r\n                            width: \"25%\",\r\n                            borderRight: \"1px solid grey\"\r\n                        }}>\r\n                            {data.name}\r\n                        </div>\r\n                        <div style={{\r\n                            width: \"25%\",\r\n                            borderRight: \"1px solid grey\"\r\n                        }}>\r\n                            {data.questions.length}\r\n                        </div>\r\n                        <div style={data.status == \"Checked\" ? ({\r\n                                width: \"25%\",\r\n                                borderRight: \"1px solid grey\",\r\n                                cursor: \"pointer\"\r\n                            }) : ({\r\n                                width: \"25%\",\r\n                                borderRight: \"1px solid grey\",\r\n                            })}\r\n                            onPointerEnter={onHoverEnter}\r\n                            onPointerLeave={onHoverLeave}\r\n                        >\r\n                            {data.status}\r\n                            <div style={showComment ? (\r\n                                {\r\n                                    display: \"block\",\r\n                                    position: \"ablosute\",\r\n                                }\r\n                            ) : (\r\n                                {\r\n                                    display: \"none\",\r\n                                    position: \"ablosute\"\r\n                                }\r\n                            )}>\r\n                                <b>Psychologist comments:</b> {data.comments}\r\n                            </div>\r\n                        </div>\r\n                        <div style={{\r\n                            width: \"15%\",\r\n                            textAlign: \"center\",\r\n                            display: \"flex\",\r\n                            justifyContent: \"center\"\r\n                        }}>\r\n                            {data.status == \"To test\" ? (\r\n                                <Link to={\"/tests/test?id=\"+data.id} style={{\r\n                                    width: \"40%\",\r\n                                    height: \"18px\",\r\n                                    color: \"white\",\r\n                                    fontSize: \"14px\",\r\n                                    background: \"grey\",\r\n                                    borderColor: \"grey\",\r\n                                    marginRight: \"5px\",\r\n                                    padding: \"2.1px 10px\",\r\n                                    borderRadius: \"4px\"\r\n                                }}>Open test</Link>\r\n                            ) : (\r\n                                <>No actions</>\r\n                            )}\r\n                        </div>\r\n                    </>\r\n                )\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Row;","import style from \"./Row.module.css\";\r\n\r\nconst TableHeader = ({data, type, isAdmin}) => {\r\n  return (\r\n    <div className={style.header}>\r\n        {type === \"client\" ? (\r\n            <>\r\n                <div style={{\r\n                    width: \"10%\",\r\n                    fontWeight: \"600\",\r\n                    borderRight: \"1px solid grey\"\r\n                }}>\r\n                    Id\r\n                </div>\r\n                <div style={{\r\n                    width: \"25%\",\r\n                    fontWeight: \"600\",\r\n                    borderRight: \"1px solid grey\"\r\n                }}>\r\n                    First name\r\n                </div>\r\n                <div style={{\r\n                    width: \"25%\",\r\n                    fontWeight: \"600\",\r\n                    borderRight: \"1px solid grey\"\r\n                }}>\r\n                    Last name\r\n                </div>\r\n                <div style={{\r\n                    width: \"25%\",\r\n                    fontWeight: \"600\",\r\n                    borderRight: \"1px solid grey\"\r\n                }}>\r\n                    Email\r\n                </div>\r\n                <div style={{\r\n                    fontWeight: \"600\",\r\n                    width: \"15%\"\r\n                }}>\r\n                    Actions\r\n                </div>\r\n            </>\r\n        ) : (\r\n            type === \"test\" ? (\r\n                <>\r\n                    <div style={{\r\n                        width: \"10%\",\r\n                        fontWeight: \"600\",\r\n                        borderRight: \"1px solid grey\"\r\n                    }}>\r\n                        Id\r\n                    </div>\r\n                    <div style={{\r\n                        width: \"25%\",\r\n                        fontWeight: \"600\",\r\n                        borderRight: \"1px solid grey\"\r\n                    }}>\r\n                        Name\r\n                    </div>\r\n                    <div style={{\r\n                        width: \"25%\",\r\n                        fontWeight: \"600\",\r\n                        borderRight: \"1px solid grey\"\r\n                    }}>\r\n                        Number of q`s\r\n                    </div>\r\n                    <div style={{\r\n                        width: \"25%\",\r\n                        fontWeight: \"600\",\r\n                        borderRight: \"1px solid grey\"\r\n                    }}>\r\n                        {isAdmin ? (\r\n                            <>Number of assigns</>\r\n                        ) : (\r\n                            <>Status</>\r\n                        )}\r\n                    </div>\r\n                    <div style={{\r\n                        fontWeight: \"600\",\r\n                        width: \"15%\"\r\n                    }}>\r\n                        Actions\r\n                    </div>\r\n                </>\r\n            ) : (\r\n               <></>\r\n            )\r\n        )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TableHeader;","import sprite from \"../../img/sprite.svg\";\r\nimport style from \"./BtnWhite.module.css\";\r\n\r\nconst BtnWhite = ({ icon, name, iconStyle, btnStyle }) => {\r\n  return (\r\n    <button type=\"button\" style={btnStyle} className={style.flex}>\r\n      <svg style={iconStyle} className={style.icon}>\r\n        <use href={sprite + [icon]}></use>\r\n      </svg>\r\n      <p className={style.name}>{name}</p>\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default BtnWhite;\r\n","export const styleBtn = {\r\n    btnName: {\r\n      width: \"57px\",\r\n      height: \"34px\",\r\n      color: \"#2B3135\",\r\n      fontSize: \"12px\",\r\n      position: \"absolute\",\r\n      bottom: \"16px\",\r\n      left: \"8px\",\r\n      boxShadow: \"0px 1px 4px rgba(0, 0, 0, 0.25)\",\r\n      background: \"#f2f3f4\",\r\n      zIndex: 10,\r\n    },\r\n    btnTime: {\r\n      width: \"90px\",\r\n      height: \"34px\",\r\n      color: \"#2B3135\",\r\n      fontSize: \"12px\",\r\n      position: \"absolute\",\r\n      bottom: \"16px\",\r\n      left: \"80px\",\r\n      boxShadow: \"0px 1px 4px rgba(0, 0, 0, 0.25)\",\r\n      background: \"#f2f3f4\",\r\n      zIndex: 10,\r\n    },\r\n    btnCancel: { width: \"148px\", height: \"48px\" },\r\n    btnSave: { width: \"30%\", height: \"48px\", color: \"#fff\" },\r\n    btnDisable: {\r\n      width: \"30%\",\r\n      height: \"48px\",\r\n      color: \"#fff\",\r\n      background: \"#d3d5da\",\r\n      border: \"1px solid #d3d5da\",\r\n    },\r\n  };","import React, { useRef, useState, useCallback, createElement } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport style from \"./AddModal.module.css\";\r\nimport sprite from \"../../img/sprite.svg\";\r\nimport BtnGrey from \"../buttons/BtnGrey\";\r\nimport BtnWhite from \"../buttons/BtnWhite\";\r\nimport BtnBlue from \"../buttons/BtnBlue\";\r\nimport { styleBtn } from \"./stylebtnModal\";\r\nimport { addClientOperation } from \"../../redux/user/user.operation\";\r\nimport { useEffect } from \"react\";\r\n\r\nconst AddClientModal = ({\r\n  name,\r\n  togleModal,\r\n  display,\r\n  messageEdit,\r\n  companyId,\r\n}) => {\r\n  const [firstName, setFirstName] = useState(\"\");\r\n  const [lastName, setLastName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n\r\n  }, [dispatch]);\r\n\r\n  const handleChange = (e) => {\r\n    if (e.currentTarget.name === \"firstName\") {\r\n        setFirstName(e.currentTarget.value);\r\n    } else if(e.currentTarget.name === \"lastName\"){\r\n        setLastName(e.currentTarget.value);\r\n    } else if(e.currentTarget.name === \"email\"){\r\n        setEmail(e.currentTarget.value);\r\n    } else if(e.currentTarget.name === \"password\"){\r\n        setPassword(e.currentTarget.value);\r\n    }\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    dispatch(addClientOperation({firstName, lastName, email, password}));\r\n    togleModal();\r\n  };\r\n\r\n  return (\r\n    <div className={style.bgModal}>\r\n      <form onSubmit={handleSubmit} className={style.form}>\r\n        <svg onClick={togleModal} className={style.icon}>\r\n          <use href={sprite + \"#icon-close\"}></use>\r\n        </svg>\r\n        <h2 className={style.head}>{name}</h2>\r\n        <label className={style.label}>\r\n          First name\r\n          <input\r\n            onChange={handleChange}\r\n            className={style.input}\r\n            name=\"firstName\"\r\n            type=\"text\"\r\n            value={firstName}\r\n            style={\r\n              firstName.length > 0\r\n                ? { border: \"1px solid #d3d5da\" }\r\n                : { color: \"#2b3135\", border: \"1px solid #ff8616\" }\r\n            }\r\n          ></input>\r\n        </label>\r\n        <label className={style.label}>\r\n          Last name\r\n          <input\r\n            onChange={handleChange}\r\n            className={style.input}\r\n            name=\"lastName\"\r\n            type=\"text\"\r\n            value={lastName}\r\n            style={\r\n              lastName.length > 0\r\n                ? { border: \"1px solid #d3d5da\" }\r\n                : { color: \"#2b3135\", border: \"1px solid #ff8616\" }\r\n            }\r\n          ></input>\r\n        </label>\r\n        <label className={style.label}>\r\n          Email\r\n          <input\r\n            onChange={handleChange}\r\n            className={style.input}\r\n            name=\"email\"\r\n            type=\"email\"\r\n            value={email}\r\n            style={\r\n              email.length > 0\r\n                ? { border: \"1px solid #d3d5da\" }\r\n                : { color: \"#2b3135\", border: \"1px solid #ff8616\" }\r\n            }\r\n          ></input>\r\n        </label>\r\n        <label className={style.label}>\r\n          Password\r\n          <input\r\n            onChange={handleChange}\r\n            className={style.input}\r\n            name=\"password\"\r\n            type=\"password\"\r\n            value={password}\r\n            style={\r\n              password.length >= 8\r\n                ? { border: \"1px solid #d3d5da\" }\r\n                : { color: \"#2b3135\", border: \"1px solid #ff8616\" }\r\n            }\r\n          ></input>\r\n        </label>\r\n        <div className={style.btnFlex}>\r\n          <div onClick={togleModal}>\r\n            <BtnWhite\r\n              name={\"Cancel\"}\r\n              iconStyle={{ display: \"none\" }}\r\n              btnStyle={styleBtn.btnCancel}\r\n            />\r\n          </div>\r\n          <BtnBlue\r\n            type=\"submit\"\r\n            disable={\r\n              !(firstName.length > 0 && lastName.length > 0 && email.length > 0 && password.length >= 8)\r\n            }\r\n            name={\"Save\"}\r\n            iconStyle={{ display: \"none\" }}\r\n            btnStyle={\r\n                firstName.length > 0 && lastName.length > 0 && email.length > 0 && password.length >= 8\r\n                    ? styleBtn.btnSave\r\n                    : styleBtn.btnDisable\r\n            }\r\n          />\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddClientModal;\r\n","import sprite from \"../../img/sprite.svg\";\r\nimport style from \"./Header.module.css\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getUser } from \"../../redux/user/user.selectors\";\r\nimport { logoutOperation } from \"../../redux/user/user.operation\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Header = () => {\r\n  const user = useSelector(getUser);\r\n  const dispatch = useDispatch();\r\n  const isAdmin = user.user.Creator == 0 ? true : false\r\n\r\n  const logout = () => {\r\n    dispatch(logoutOperation());\r\n  };\r\n\r\n  return (\r\n    <div className={style.header}>\r\n      <h1 style={{\r\n        fontSize: \"24px\",\r\n        fontWeight: \"600\"\r\n      }}>Psychologist</h1>\r\n      <div >\r\n        {isAdmin ? (\r\n          <Link className={style.nav} to=\"/\">Clients</Link>\r\n        ) : (<></>)}\r\n        <Link className={style.nav} to=\"/tests\">Tests</Link>\r\n      </div>\r\n      <div className={style.rightSide}>\r\n        <p style={{paddingRight:'10px'}}>{user.user.FirstName + \" \" + user.user.LastName}</p>\r\n        <svg onClick={() => logout()} className={style.logOut}>\r\n          <use href={sprite + \"#icon-logout\"}></use>\r\n        </svg>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import { useEffect, useState } from \"react\";\r\nimport { getClientsOperation } from \"../../redux/user/user.operation\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getLoading, getClients, getUser } from \"../../redux/user/user.selectors\";\r\nimport BtnBlue from \"../buttons/BtnBlue\";\r\nimport Row from \"../row/Row\";\r\nimport TableHeader from \"../row/TableHeader\";\r\nimport AddClientModal from \"../modal/AddClientModal\"\r\nimport style from \"./Clients.module.css\";\r\nimport Container from \"../container/Container\";\r\nimport Spiner from \"../spiner/Spiner\";\r\nimport { Navigate } from \"react-router-dom\";\r\n\r\nimport Header from \"../header/Header\";\r\n\r\nconst Clients = () => {\r\n    const clients = useSelector(getClients);\r\n    const [isOpenAdd, setIsOpenAdd] = useState(false);\r\n    const togleAdd = () => setIsOpenAdd(!isOpenAdd);\r\n    const dispatch = useDispatch();\r\n    useEffect(() => {\r\n        dispatch(getClientsOperation())\r\n    }, [dispatch]);\r\n\r\n    const loading = useSelector(getLoading);\r\n    const user = useSelector(getUser);\r\n    const isAdmin = user.user.Creator == 0 ? true : false\r\n\r\n    return (\r\n        <Container>\r\n        {!isAdmin ? (<Navigate to=\"/tests\" />) : (<></>)}\r\n        {loading ? (\r\n            <div className={style.flexSpiner}>\r\n            <Spiner style={{ color: \"black\", fontSize: \"4em\" }} />\r\n            </div>\r\n        ) : (\r\n            <>\r\n                <Header />\r\n                <div style={{\r\n                    display: \"flex\",\r\n                    margin: \"10px 10%\"\r\n                }}>\r\n                    <p style={{\r\n                        fontSize: \"28px\",\r\n                        color: \"black\",\r\n                        fontWeight: \"600\",\r\n                        width: \"95%\",\r\n                        textAlign: \"start\"\r\n                    }}>Clients</p>\r\n                    <BtnBlue onClick={togleAdd} btnStyle={{\r\n                        width: \"5%\",\r\n                        color: \"white\",\r\n                        textAlign: \"center\",\r\n                        height: \"40px\"\r\n                    }} name={'Add new'}>Add new</BtnBlue>\r\n                </div>\r\n                {clients ? (\r\n                    <>\r\n                        <div style={{\r\n                            display: \"flex\",\r\n                            flexDirection: \"column\",\r\n                            margin: \"10px 10% 0 10%\"\r\n                        }}>\r\n                            <TableHeader data={clients} type={\"client\"} />\r\n                        </div><div style={{\r\n                            display: \"flex\",\r\n                            flexDirection: \"column\",\r\n                            margin: \"0 10%\"\r\n                        }}>\r\n                            {clients.map((client) => (\r\n                                <Row data={client} type={\"client\"} key={client.id} />\r\n                            ))}\r\n                        </div>\r\n                    </>\r\n                ) : (\r\n                    <h1>No clients yet</h1>\r\n                )}\r\n                {isOpenAdd && (\r\n                    <AddClientModal\r\n                        name={\"Add New Client\"}\r\n                        togleModal={togleAdd}\r\n                        display={{ display: \"none\" }}\r\n                    />\r\n                )}\r\n            </>\r\n        )}\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default Clients;\r\n","import React, { useRef, useState, useCallback, createElement } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport uuid from 'react-uuid'\r\nimport style from \"./AddModal.module.css\";\r\nimport sprite from \"../../img/sprite.svg\";\r\nimport BtnGrey from \"../buttons/BtnGrey\";\r\nimport BtnWhite from \"../buttons/BtnWhite\";\r\nimport BtnBlue from \"../buttons/BtnBlue\";\r\nimport BtnRed from \"../buttons/BtnRed\";\r\nimport { styleBtn } from \"./stylebtnModal\";\r\nimport { addTestOperation } from \"../../redux/user/user.operation\";\r\nimport { useEffect } from \"react\";\r\n\r\nconst AddTestsModal = ({\r\n  name,\r\n  togleModal,\r\n  display,\r\n  messageEdit,\r\n  companyId,\r\n}) => {\r\n  const [questions, setQuestions] = useState({});\r\n  const [testName, setTestName] = useState('');\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n\r\n  }, [dispatch]);\r\n\r\n  const handleChange = (e) => {\r\n    if(questions[e.currentTarget.getAttribute('rowid')]){\r\n      questions[e.currentTarget.getAttribute('rowid')].question = e.currentTarget.value;\r\n      setQuestions({...questions})\r\n    }\r\n  };\r\n\r\n  const handleChangeName = (e) => {\r\n    setTestName(e.currentTarget.value)\r\n  };\r\n\r\n  const addQuestion = (e) => {\r\n    const id = uuid()\r\n    questions[id] = {\r\n      question: \"\",\r\n      id \r\n    }\r\n    setQuestions({...questions})\r\n  }\r\n\r\n  const removeQuestion = (e) => {\r\n    delete questions[e.currentTarget.id]\r\n    setQuestions({...questions})\r\n  }\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    dispatch(addTestOperation({questions, name: testName}));\r\n    togleModal();\r\n  };\r\n\r\n  return (\r\n    <div className={style.bgModal}>\r\n      <form className={style.form}>\r\n        <svg onClick={togleModal} className={style.icon}>\r\n          <use href={sprite + \"#icon-close\"}></use>\r\n        </svg>\r\n        <h2 className={style.head}>{name}</h2>\r\n        <label className={style.label}>\r\n          Test name\r\n          <input \r\n            onChange={handleChangeName}\r\n            className={style.input}\r\n            type=\"text\"\r\n            value={testName}\r\n          ></input>\r\n        </label>\r\n        {Object.entries(questions).map((q) => (\r\n          <label key={q[1].id}  className={style.label}>\r\n            Question\r\n            <input \r\n              onChange={handleChange}\r\n              className={style.input}\r\n              type=\"text\"\r\n              value={q[1].question}\r\n              rowid={q[1].id}\r\n            ></input>\r\n            <BtnRed \r\n              onClick={removeQuestion}\r\n              name={\"Remove\"}\r\n              iconStyle={{ display: \"none\" }}\r\n              btnStyle={{\r\n                borderColor: \"red\",\r\n                padding: \"5px\",\r\n                color: \"white\"\r\n              }}\r\n              rowid={q[1].id}\r\n            />\r\n            <hr/>\r\n          </label>\r\n        ))}\r\n        <div style={{\r\n            width: \"100%\"\r\n          }} className={style.btnFlex}>\r\n          <div style={{\r\n            width: \"30%\"\r\n          }} onClick={togleModal}>\r\n            <BtnWhite\r\n              name={\"Cancel\"}\r\n              iconStyle={{ display: \"none\" }}\r\n              btnStyle={{ height: \"48px\", width: \"90%\" }}\r\n            />\r\n          </div>\r\n          <div style={{\r\n            width: \"30%\"\r\n          }} onClick={addQuestion}>\r\n            <BtnWhite\r\n              name={\"Add question\"}\r\n              iconStyle={{ display: \"none\" }}\r\n              btnStyle={{ height: \"48px\", width: \"90%\" }}\r\n            />\r\n          </div>\r\n          <BtnBlue\r\n            onClick={handleSubmit}\r\n            disable={\r\n              !(Object.entries(questions).length > 0)\r\n            }\r\n            name={\"Save\"}\r\n            iconStyle={{ display: \"none\" }}\r\n            btnStyle={\r\n              Object.entries(questions).length > 0\r\n                    ? styleBtn.btnSave\r\n                    : styleBtn.btnDisable\r\n            }\r\n          />\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddTestsModal;\r\n","import React, { useRef, useState, useCallback, createElement } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport uuid from 'react-uuid'\r\nimport style from \"./AddModal.module.css\";\r\nimport sprite from \"../../img/sprite.svg\";\r\nimport BtnGrey from \"../buttons/BtnGrey\";\r\nimport BtnWhite from \"../buttons/BtnWhite\";\r\nimport BtnBlue from \"../buttons/BtnBlue\";\r\nimport BtnRed from \"../buttons/BtnRed\";\r\nimport { styleBtn } from \"./stylebtnModal\";\r\nimport { editTestOperation } from \"../../redux/user/user.operation\";\r\nimport { useEffect } from \"react\";\r\n\r\nconst AddTestsModal = ({\r\n  name,\r\n  togleModal,\r\n  data,\r\n  testId,\r\n  display,\r\n  messageEdit,\r\n  companyId,\r\n}) => {\r\n  const [questions, setQuestions] = useState({});\r\n  const [testName, setTestName] = useState('');\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    for(let t of data){\r\n      if(t.id === +testId){\r\n        setTestName(t.name)\r\n        for(let q of t.questions){\r\n          addQuestionEdit(q)\r\n        }\r\n      }\r\n    }\r\n  }, [dispatch]);\r\n\r\n  const handleChange = (e) => {\r\n    if(questions[e.currentTarget.getAttribute('rowid')]){\r\n      questions[e.currentTarget.getAttribute('rowid')].question = e.currentTarget.value;\r\n      setQuestions({...questions})\r\n    }\r\n  };\r\n\r\n  const handleChangeName = (e) => {\r\n    setTestName(e.currentTarget.value)\r\n  };\r\n\r\n  const addQuestion = (e) => {\r\n    const id = uuid()\r\n    questions[id] = {\r\n      question: \"\",\r\n      id \r\n    }\r\n    setQuestions({...questions})\r\n  }\r\n\r\n  const addQuestionEdit = (q) => {\r\n    const id = uuid()\r\n    questions[id] = {\r\n      question: q.question,\r\n      id \r\n    }\r\n    setQuestions({...questions})\r\n  }\r\n\r\n  const removeQuestion = (e) => {\r\n    delete questions[e.currentTarget.id]\r\n    setQuestions({...questions})\r\n  }\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    dispatch(editTestOperation({questions, name: testName, id: testId}));\r\n    togleModal();\r\n  };\r\n\r\n  return (\r\n    <div className={style.bgModal}>\r\n      <form className={style.form}>\r\n        <svg onClick={togleModal} className={style.icon}>\r\n          <use href={sprite + \"#icon-close\"}></use>\r\n        </svg>\r\n        <h2 className={style.head}>{name}</h2>\r\n        <label className={style.label}>\r\n          Test name\r\n          <input \r\n            onChange={handleChangeName}\r\n            className={style.input}\r\n            type=\"text\"\r\n            value={testName}\r\n          ></input>\r\n        </label>\r\n        {Object.entries(questions).map((q) => (\r\n          <label key={q[1].id}  className={style.label}>\r\n            Question\r\n            <input \r\n              onChange={handleChange}\r\n              className={style.input}\r\n              type=\"text\"\r\n              value={q[1].question}\r\n              rowid={q[1].id}\r\n            ></input>\r\n            <BtnRed \r\n              onClick={removeQuestion}\r\n              name={\"Remove\"}\r\n              iconStyle={{ display: \"none\" }}\r\n              btnStyle={{\r\n                borderColor: \"red\",\r\n                padding: \"5px\",\r\n                color: \"white\"\r\n              }}\r\n              rowid={q[1].id}\r\n            />\r\n            <hr/>\r\n          </label>\r\n        ))}\r\n        <div style={{\r\n            width: \"100%\"\r\n          }} className={style.btnFlex}>\r\n          <div style={{\r\n            width: \"30%\"\r\n          }} onClick={togleModal}>\r\n            <BtnWhite\r\n              name={\"Cancel\"}\r\n              iconStyle={{ display: \"none\" }}\r\n              btnStyle={{ height: \"48px\", width: \"90%\" }}\r\n            />\r\n          </div>\r\n          <div style={{\r\n            width: \"30%\"\r\n          }} onClick={addQuestion}>\r\n            <BtnWhite\r\n              name={\"Add question\"}\r\n              iconStyle={{ display: \"none\" }}\r\n              btnStyle={{ height: \"48px\", width: \"90%\" }}\r\n            />\r\n          </div>\r\n          <BtnBlue\r\n            onClick={handleSubmit}\r\n            disable={\r\n              !(Object.entries(questions).length > 0)\r\n            }\r\n            name={\"Save\"}\r\n            iconStyle={{ display: \"none\" }}\r\n            btnStyle={\r\n              Object.entries(questions).length > 0\r\n                    ? styleBtn.btnSave\r\n                    : styleBtn.btnDisable\r\n            }\r\n          />\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddTestsModal;\r\n","import React, { useRef, useState, useCallback, createElement } from \"react\";\r\nimport Select from 'react-select'\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport style from \"./AddModal.module.css\";\r\nimport sprite from \"../../img/sprite.svg\";\r\nimport BtnGrey from \"../buttons/BtnGrey\";\r\nimport BtnWhite from \"../buttons/BtnWhite\";\r\nimport BtnBlue from \"../buttons/BtnBlue\";\r\nimport BtnRed from \"../buttons/BtnRed\";\r\nimport { styleBtn } from \"./stylebtnModal\";\r\nimport { assignTestOperation } from \"../../redux/user/user.operation\";\r\nimport { useEffect } from \"react\";\r\n\r\nconst AssignTestsModal = ({\r\n  name,\r\n  togleModal,\r\n  clients,\r\n  testId,\r\n  display,\r\n  messageEdit,\r\n  companyId,\r\n}) => {\r\n  const [clientId, setClientId] = useState('');\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n  }, [dispatch]);\r\n\r\n  const handleChange = (e) => {\r\n    setClientId(e.value)\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    dispatch(assignTestOperation({testId, clientId}));\r\n    togleModal();\r\n  };\r\n\r\n  const options = clients.map((c) => {\r\n    return {\r\n      value: c.id,\r\n      label: c.FirstName+\" \"+c.LastName\r\n    }\r\n  })\r\n\r\n  return (\r\n    <div className={style.bgModal}>\r\n      <form className={style.form}>\r\n        <svg onClick={togleModal} className={style.icon}>\r\n          <use href={sprite + \"#icon-close\"}></use>\r\n        </svg>\r\n        <h2 className={style.head}>{name}</h2>\r\n        <label className={style.label}>\r\n          Client\r\n          <Select onChange={handleChange} options={options}/>\r\n        </label>\r\n        <div style={{\r\n            width: \"100%\"\r\n          }} className={style.btnFlex}>\r\n          <div style={{\r\n            width: \"30%\"\r\n          }} onClick={togleModal}>\r\n            <BtnWhite\r\n              name={\"Cancel\"}\r\n              iconStyle={{ display: \"none\" }}\r\n              btnStyle={{ height: \"48px\", width: \"90%\" }}\r\n            />\r\n          </div>\r\n          <BtnBlue\r\n            onClick={handleSubmit}\r\n            disable={\r\n              !(clientId)\r\n            }\r\n            name={\"Save\"}\r\n            iconStyle={{ display: \"none\" }}\r\n            btnStyle={\r\n              clientId\r\n                    ? styleBtn.btnSave\r\n                    : styleBtn.btnDisable\r\n            }\r\n          />\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AssignTestsModal;\r\n","import { useEffect, useState } from \"react\";\r\nimport { getTestsOperation, getClientsOperation } from \"../../redux/user/user.operation\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getLoading, getTests, getUser, getClients } from \"../../redux/user/user.selectors\";\r\nimport BtnBlue from \"../buttons/BtnBlue\";\r\nimport Row from \"../row/Row\";\r\nimport TableHeader from \"../row/TableHeader\";\r\nimport AddTestsModal from \"../modal/AddTestsModal\"\r\nimport EditTestsModal from \"../modal/EditTestsModal\"\r\nimport AssignTestsModal from \"../modal/AssignTestsModal\"\r\nimport style from \"./Tests.module.css\";\r\nimport Container from \"../container/Container\";\r\nimport Spiner from \"../spiner/Spiner\";\r\n\r\nimport Header from \"../header/Header\";\r\n\r\nconst Tests = () => {\r\n    const clients = useSelector(getClients);\r\n    const tests = useSelector(getTests);\r\n    const [isOpenAdd, setIsOpenAdd] = useState(false);\r\n    const [isOpenEdit, setIsOpenEdit] = useState(false);\r\n    const [isOpenAssign, setIsOpenAssign] = useState(false);\r\n    const [testToEdit, setTestToEdit] = useState(null);\r\n    const [testToAssign, setTestToAssign] = useState(null);\r\n    const togleAdd = () => setIsOpenAdd(!isOpenAdd);\r\n    const togleEdit = (e) => {\r\n        if(isOpenEdit == true){\r\n            setTestToEdit(null)\r\n        }\r\n        else{\r\n            setTestToEdit(e.currentTarget.getAttribute(\"rowid\"))\r\n        }\r\n        setIsOpenEdit(!isOpenEdit)\r\n    };\r\n    const togleAssign = (e) => {\r\n        if(isOpenAssign == true){\r\n            setTestToAssign(null)\r\n        }\r\n        else{\r\n            setTestToAssign(e.currentTarget.getAttribute(\"rowid\"))\r\n        }\r\n        setIsOpenAssign(!isOpenAssign)\r\n    };\r\n    const dispatch = useDispatch();\r\n    useEffect(() => {\r\n        dispatch(getTestsOperation())\r\n    }, [dispatch]);\r\n\r\n    const loading = useSelector(getLoading);\r\n    const user = useSelector(getUser);\r\n    const isAdmin = user.user.Creator == 0 ? true : false\r\n\r\n    return (\r\n        <Container>\r\n        {loading ? (\r\n            <div className={style.flexSpiner}>\r\n            <Spiner style={{ color: \"black\", fontSize: \"4em\" }} />\r\n            </div>\r\n        ) : (\r\n            <>\r\n                <Header />\r\n                <div style={{\r\n                    display: \"flex\",\r\n                    margin: \"10px 10%\"\r\n                }}>\r\n                    <p style={{\r\n                        fontSize: \"28px\",\r\n                        color: \"black\",\r\n                        fontWeight: \"600\",\r\n                        width: \"95%\",\r\n                        textAlign: \"start\"\r\n                    }}>{isAdmin ? (\r\n                        <>Tests</>\r\n                    ) : (\r\n                        <>Assigned tests</>\r\n                    )}</p>\r\n                    {isAdmin ? (\r\n                        <BtnBlue onClick={togleAdd} btnStyle={{\r\n                            width: \"5%\",\r\n                            color: \"white\",\r\n                            textAlign: \"center\",\r\n                            height: \"40px\"\r\n                        }} name={'Add new'}>Add new</BtnBlue>) : \r\n                    (\r\n                        <></>\r\n                    )}\r\n                </div>\r\n                {tests ? (\r\n                    <>\r\n                        <div style={{\r\n                            display: \"flex\",\r\n                            flexDirection: \"column\",\r\n                            margin: \"10px 10% 0 10%\"\r\n                        }}>\r\n                            <TableHeader isAdmin={isAdmin} data={tests} type={\"test\"} />\r\n                        </div><div style={{\r\n                            display: \"flex\",\r\n                            flexDirection: \"column\",\r\n                            margin: \"0 10%\"\r\n                        }}>\r\n                            {tests.map((test) => (\r\n                                <Row isAdmin={isAdmin} togleEdit={togleEdit} togleAssign={togleAssign} data={test} type={\"test\"} key={test.id} />\r\n                            ))}\r\n                        </div>\r\n                    </>\r\n                ) : (\r\n                    <h1>No tests yet</h1>\r\n                )}\r\n                {isOpenAdd && (\r\n                    <AddTestsModal\r\n                        name={\"Add New Test\"}\r\n                        togleModal={togleAdd}\r\n                        display={{ display: \"none\" }}\r\n                    />\r\n                )}\r\n                {isOpenEdit && (\r\n                    <EditTestsModal\r\n                        data={tests}\r\n                        testId={testToEdit}\r\n                        name={\"Edit Test\"}\r\n                        togleModal={togleEdit}\r\n                        display={{ display: \"none\" }}\r\n                    />\r\n                )}\r\n                {isOpenAssign && (\r\n                    <AssignTestsModal\r\n                        testId={testToAssign}\r\n                        clients={clients}\r\n                        name={\"Assign Test\"}\r\n                        togleModal={togleAssign}\r\n                        display={{ display: \"none\" }}\r\n                    />\r\n                )}\r\n            </>\r\n        )}\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default Tests;\r\n","import { useEffect, useState } from \"react\";\r\nimport { getActiveTestOperation, answerActiveTestOperation } from \"../../redux/user/user.operation\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getLoading, getActiveTest, getUser } from \"../../redux/user/user.selectors\";\r\nimport { useSearchParams, useNavigate  } from \"react-router-dom\";\r\nimport BtnBlue from \"../buttons/BtnBlue\";\r\nimport style from \"./Tests.module.css\";\r\nimport Container from \"../container/Container\";\r\nimport Spiner from \"../spiner/Spiner\";\r\n\r\nimport Header from \"../header/Header\";\r\n\r\nconst ActiveTest = () => {\r\n    let [searchParams, setSearchParams] = useSearchParams();\r\n    const test = useSelector(getActiveTest);\r\n    const [answers, setAnswers] = useState({});\r\n    const dispatch = useDispatch();\r\n    const navigate = useNavigate();\r\n    useEffect(() => {\r\n        dispatch(getActiveTestOperation({id: searchParams.get(\"id\")}))\r\n    }, [dispatch]);\r\n\r\n    const loading = useSelector(getLoading);\r\n    const user = useSelector(getUser);\r\n    const isAdmin = user.user.Creator == 0 ? true : false\r\n\r\n    const handleChange = (e) => {\r\n        answers[e.target.name] = e.target.value\r\n        setAnswers({...answers})\r\n    }\r\n\r\n    const handleSubmit = () => {\r\n        const answ = []\r\n        for(let a of Object.entries(answers)){\r\n            answ.push({\r\n                id: a[0],\r\n                answer: a[1]\r\n            })\r\n        }\r\n        dispatch(answerActiveTestOperation({testId: test.id, creatorId: test.creatorid, answers: answ}))\r\n        onSubmit()\r\n    }\r\n\r\n    const onSubmit = () => navigate(`/tests`)\r\n\r\n    return (\r\n        <Container>\r\n        {loading ? (\r\n            <div className={style.flexSpiner}>\r\n            <Spiner style={{ color: \"black\", fontSize: \"4em\" }} />\r\n            </div>\r\n        ) : (\r\n            <>\r\n                <Header />\r\n                {test ? (\r\n                    <>\r\n                        <div style={{\r\n                            display: \"flex\",\r\n                            margin: \"10px 10%\"\r\n                        }}>\r\n                            <p style={{\r\n                                fontSize: \"28px\",\r\n                                color: \"black\",\r\n                                fontWeight: \"600\",\r\n                                width: \"95%\",\r\n                                textAlign: \"start\"\r\n                            }}>\r\n                                {test.name}\r\n                            </p>\r\n                        </div>\r\n                        <div style={{\r\n                            display: \"flex\",\r\n                            flexDirection: \"column\",\r\n                            margin: \"10px 10% 0 10%\"\r\n                        }}>\r\n                            {test.questions.map((q) => (\r\n                                <div key={q.id} style={{\r\n                                    textAlign:\"start\"\r\n                                }}>\r\n                                    <p style={{\r\n                                        fontSize: \"18px\",\r\n                                        fontWeight: \"600\",\r\n                                        color: \"black\",\r\n                                        paddingBottom: \"7px\"\r\n                                    }}>\r\n                                        {q.question}\r\n                                    </p>\r\n                                    <div style={{\r\n                                        display: \"flex\",\r\n                                        flexDirection: \"row\", \r\n                                        justifyContent: \"space-between\",\r\n                                        paddingBottom: \"15px\"\r\n                                    }}\r\n                                    onChange={handleChange}\r\n                                    >\r\n                                        <label>\r\n                                            0\r\n                                            <input type={\"radio\"} name={q.id} value={0}/>\r\n                                        </label>\r\n                                        <label>\r\n                                            1\r\n                                            <input type={\"radio\"} name={q.id} value={1}/>\r\n                                        </label>\r\n                                        <label>\r\n                                            2\r\n                                            <input type={\"radio\"} name={q.id} value={2}/>\r\n                                        </label>\r\n                                        <label>\r\n                                            3\r\n                                            <input type={\"radio\"} name={q.id} value={3}/>\r\n                                        </label>\r\n                                    </div>\r\n                                </div>\r\n                            ))}\r\n                            <div style={{\r\n                                display: \"flex\",\r\n                                justifyContent: \"center\",\r\n                                width: \"100%\"\r\n                            }}>\r\n                                <BtnBlue btnStyle={Object.entries(answers).length >= test.questions.length ? {\r\n                                    width: \"8%\",\r\n                                    color: \"white\",\r\n                                    height: \"38px\"\r\n                                } : {\r\n                                    width: \"8%\",\r\n                                    color: \"white\",\r\n                                    background: \"grey\",\r\n                                    cursor: \"not-allowed\",\r\n                                    borderColor: \"grey\",\r\n                                    height: \"38px\"\r\n                                }} name={\"Submit\"} onClick={handleSubmit} disable={Object.entries(answers).length >= test.questions.length ? false : true}/>\r\n                            </div>\r\n                        </div>\r\n                    </>\r\n                ) : (\r\n                    <h1>Test not found</h1>\r\n                )}\r\n            </>\r\n        )}\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default ActiveTest;\r\n","import React, { useRef, useState, useCallback, createElement } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport style from \"./AddModal.module.css\";\r\nimport sprite from \"../../img/sprite.svg\";\r\nimport BtnGrey from \"../buttons/BtnGrey\";\r\nimport BtnWhite from \"../buttons/BtnWhite\";\r\nimport BtnBlue from \"../buttons/BtnBlue\";\r\nimport { styleBtn } from \"./stylebtnModal\";\r\nimport { clientTestCommentOperation } from \"../../redux/user/user.operation\";\r\nimport { useEffect } from \"react\";\r\n\r\nconst CommentTestModal = ({\r\n  name,\r\n  togleModal,\r\n  testId,\r\n  display,\r\n  messageEdit,\r\n  companyId,\r\n}) => {\r\n  const [comment, setComment] = useState(\"\");\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n\r\n  }, [dispatch]);\r\n\r\n  const handleChange = (e) => {\r\n    if (e.currentTarget.name === \"comment\") {\r\n      setComment(e.currentTarget.value);\r\n    }\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    dispatch(clientTestCommentOperation({assignId: testId, comment}));\r\n    togleModal();\r\n  };\r\n\r\n  return (\r\n    <div className={style.bgModal}>\r\n      <form onSubmit={handleSubmit} className={style.form}>\r\n        <svg onClick={togleModal} className={style.icon}>\r\n          <use href={sprite + \"#icon-close\"}></use>\r\n        </svg>\r\n        <h2 className={style.head}>{name}</h2>\r\n        <label className={style.label}>\r\n          Your comment\r\n          <textarea\r\n            aria-rowcount={8}\r\n            rows={8}\r\n            onChange={handleChange}\r\n            className={style.input}\r\n            name=\"comment\"\r\n            value={comment}\r\n            style={{\r\n              resize: \"vertical\",\r\n              height: \"150px\",\r\n              minHeight: \"150px\",\r\n              maxHeight: \"650px\"\r\n            }}\r\n          ></textarea>\r\n        </label>\r\n        <div className={style.btnFlex}>\r\n          <div onClick={togleModal}>\r\n            <BtnWhite\r\n              name={\"Cancel\"}\r\n              iconStyle={{ display: \"none\" }}\r\n              btnStyle={styleBtn.btnCancel}\r\n            />\r\n          </div>\r\n          <BtnBlue\r\n            type=\"submit\"\r\n            disable={\r\n              comment.length < 16\r\n            }\r\n            name={\"Submit\"}\r\n            iconStyle={{ display: \"none\" }}\r\n            btnStyle={\r\n                  comment.length >= 16\r\n                    ? styleBtn.btnSave\r\n                    : styleBtn.btnDisable\r\n            }\r\n          />\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CommentTestModal;\r\n","import { useEffect, useState } from \"react\";\r\nimport { clientTestsOperation, answerActiveTestOperation } from \"../../redux/user/user.operation\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getLoading, getClientTests, getUser } from \"../../redux/user/user.selectors\";\r\nimport { useSearchParams, useNavigate  } from \"react-router-dom\";\r\nimport BtnBlue from \"../buttons/BtnBlue\";\r\nimport CommentTestModal from \"../modal/CommentTestModal\"\r\nimport style from \"./Tests.module.css\";\r\nimport Container from \"../container/Container\";\r\nimport Spiner from \"../spiner/Spiner\";\r\n\r\nimport Header from \"../header/Header\";\r\n\r\nconst ClientResults = () => {\r\n    let [searchParams, setSearchParams] = useSearchParams();\r\n    const tests = useSelector(getClientTests);\r\n    const [isOpenComment, setIsOpenComment] = useState(false);\r\n    const [testToComment, setTestToComment] = useState(null);\r\n    const togleComment = (e) => {\r\n        if(isOpenComment == true){\r\n            setTestToComment(null)\r\n        }\r\n        else{\r\n            setTestToComment(e.currentTarget.getAttribute(\"rowid\"))\r\n        }\r\n        setIsOpenComment(!isOpenComment)\r\n    };\r\n    const dispatch = useDispatch();\r\n    const navigate = useNavigate()\r\n    useEffect(() => {\r\n        dispatch(clientTestsOperation({id: searchParams.get(\"id\")}))\r\n    }, [dispatch]);\r\n\r\n    const loading = useSelector(getLoading);\r\n    const user = useSelector(getUser);\r\n    const isAdmin = user.user.Creator == 0 ? true : false\r\n\r\n    return (\r\n        <Container>\r\n        {loading ? (\r\n            <div className={style.flexSpiner}>\r\n            <Spiner style={{ color: \"black\", fontSize: \"4em\" }} />\r\n            </div>\r\n        ) : (\r\n            <>\r\n                <Header />\r\n                <div style={{\r\n                    display: \"flex\",\r\n                    margin: \"10px 10%\"\r\n                }}>\r\n                    <p style={{\r\n                        fontSize: \"28px\",\r\n                        color: \"black\",\r\n                        fontWeight: \"600\",\r\n                        width: \"95%\",\r\n                        textAlign: \"start\"\r\n                    }}>\r\n                        Client results\r\n                    </p>\r\n                </div>\r\n                <div style={{\r\n                    display: \"flex\",\r\n                    margin: \"10px 10%\",\r\n                    flexDirection: \"row\"\r\n                }}>\r\n                    {tests?.map((t) => (\r\n                        <div style={{\r\n                            width: \"20%\",\r\n                            padding: \"10px\",\r\n                            border: \"1px solid grey\",\r\n                            borderRadius: \"4px\",\r\n                            marginRight: \"10%\"\r\n                        }}>\r\n                            <p style={{\r\n                                fontSize: \"20px\",\r\n                                color: \"black\",\r\n                                fontWeight: \"600\",\r\n                                width: \"95%\",\r\n                                textAlign: \"start\"\r\n                            }}>\r\n                                {t.name}\r\n                            </p>\r\n                            <div style={{\r\n                                display: \"flex\",\r\n                                margin: \"10px 0\",\r\n                                flexDirection: \"column\"\r\n                            }}>\r\n                                {t.question.length > 0 ? (\r\n                                    <>\r\n                                        {t.question.map((q) => (\r\n                                            <>\r\n                                                <p style={{\r\n                                                    fontSize: \"16px\",\r\n                                                    fontWeight: \"600\",\r\n                                                    color: \"black\",\r\n                                                    width: \"95%\",\r\n                                                    textAlign: \"start\"\r\n                                                }}>\r\n                                                    {q.question}\r\n                                                </p>\r\n                                                <p style={{\r\n                                                    fontSize: \"16px\",\r\n                                                    color: \"black\",\r\n                                                    width: \"95%\",\r\n                                                    textAlign: \"start\",\r\n                                                    marginBottom: \"10px\"\r\n                                                }}>\r\n                                                    {q.mark}\r\n                                                </p>\r\n                                            </>\r\n                                        ))}\r\n                                        <p style={{\r\n                                            fontSize: \"16px\",\r\n                                            fontWeight: \"600\",\r\n                                            color: \"black\",\r\n                                            width: \"95%\",\r\n                                            textAlign: \"start\"\r\n                                        }}>\r\n                                            Total\r\n                                        </p>\r\n                                        <p style={{\r\n                                            fontSize: \"16px\",\r\n                                            color: \"black\",\r\n                                            width: \"95%\",\r\n                                            textAlign: \"start\",\r\n                                            marginBottom: \"10px\"\r\n                                        }}>\r\n                                            {t.totalMark}\r\n                                        </p>\r\n                                    </>\r\n                                ) : (\r\n                                    <p style={{\r\n                                        fontSize: \"16px\",\r\n                                        color: \"black\",\r\n                                        width: \"95%\",\r\n                                        textAlign: \"start\"\r\n                                    }}>\r\n                                        No answered questions\r\n                                    </p>\r\n                                )}\r\n                                {t.status === 3 ? (\r\n                                    <BtnBlue btnStyle={{\r\n                                        color: \"white\",\r\n                                        background: \"grey\",\r\n                                        borderColor: \"grey\",\r\n                                        width: \"100%\",\r\n                                        height: \"30px\"\r\n                                    }} name={\"Already submited\"}\r\n                                    onClick={togleComment}\r\n                                    rowid={t.assignId}\r\n                                    disable={true}/>\r\n                                ) : (\r\n                                    <BtnBlue btnStyle={{\r\n                                        color: \"white\",\r\n                                        width: \"100%\",\r\n                                        height: \"30px\"\r\n                                    }} name={\"Submit and Add comment\"}\r\n                                    onClick={togleComment}\r\n                                    rowid={t.assignId}/>\r\n                                )}\r\n                            </div>\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n                {isOpenComment && (\r\n                    <CommentTestModal\r\n                        name={\"Add comment\"}\r\n                        testId={testToComment}\r\n                        togleModal={togleComment}\r\n                        display={{ display: \"none\" }}\r\n                    />\r\n                )}\r\n            </>\r\n        )}\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default ClientResults;\r\n","import React, { useEffect } from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\n\r\nimport { errorMsg } from '../../redux/user/user.selectors'\r\nimport { resetError } from '../../redux/user/user.actions'\r\nimport { ToastContainer, toast } from 'react-toastify'\r\nimport 'react-toastify/dist/ReactToastify.css'\r\n\r\nconst notifyErrorOptions = {\r\n  position: 'top-center',\r\n  autoClose: 2000,\r\n  hideProgressBar: true,\r\n  closeOnClick: false,\r\n  pauseOnHover: true,\r\n  draggable: true,\r\n  progress: undefined,\r\n}\r\n\r\nfunction Error() {\r\n    const authError = useSelector(errorMsg)\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(() => {\r\n        if(authError){\r\n            toast.error(authError, notifyErrorOptions)\r\n        }\r\n        else{\r\n            dispatch(resetError())\r\n        }\r\n    }, [authError, dispatch])\r\n\r\n    return (\r\n        <div>\r\n            <ToastContainer newestOnTop rtl={false} pauseOnFocusLoss={false} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Error\r\n","import { useSelector } from \"react-redux\";\r\nimport { getUser } from \"../../redux/user/user.selectors\";\r\nimport { Navigate, Outlet } from \"react-router-dom\";\r\n\r\nconst PrivateRoute = () => {\r\n  const user = useSelector(getUser);\r\n  return user ? <Outlet /> : <Navigate to=\"/sign-in\" />;\r\n};\r\n\r\nexport default PrivateRoute;\r\n","import { useSelector } from \"react-redux\";\r\nimport { getUser } from \"../../redux/user/user.selectors\";\r\nimport { Navigate, Outlet } from \"react-router-dom\";\r\n\r\nconst PublicRoute = () => {\r\n  const user = useSelector(getUser);\r\n  return user ? <Navigate to=\"/\"/> : <Outlet />;\r\n};\r\n\r\nexport default PublicRoute;\r\n","import { useDispatch } from \"react-redux\";\r\nimport { Routes, Route } from \"react-router-dom\";\r\nimport SingIn from \"./components/singIn/SingIn\";\r\nimport SingUp from \"./components/singUp/SingUp\";\r\nimport Clients from \"./components/clients/Clients\";\r\nimport Tests from \"./components/tests/Tests\";\r\nimport ActiveTest from \"./components/takeTest/ActiveTest\";\r\nimport ClientResults from \"./components/clientResults/ClientResults\";\r\nimport Error from \"./components/error/Error\";\r\nimport { refreshSessionOperation } from \"./redux/user/user.operation\";\r\nimport { useEffect, useState } from \"react\";\r\n\r\nimport PrivateRoute from \"./components/Route/PrivateRoute\";\r\nimport PublicRoute from \"./components/Route/PublicRoute\";\r\n\r\nfunction App() {\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(refreshSessionOperation());\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <div>\r\n      <Routes>\r\n        <Route exat path=\"/sign-in\" element={<PublicRoute />}>\r\n          <Route path=\"/sign-in\" element={<SingIn />} />\r\n        </Route>\r\n        <Route exat path=\"/sign-up\" element={<PublicRoute />}>\r\n          <Route path=\"/sign-up\" element={<SingUp />} />\r\n        </Route>\r\n\r\n        <Route exat path=\"/\" element={<PrivateRoute />}>\r\n          <Route path=\"/\" element={<Clients />} />\r\n        </Route>\r\n        <Route exat path=\"/tests\" element={<PrivateRoute />}>\r\n          <Route path=\"/tests\" element={<Tests />} />\r\n        </Route>\r\n        <Route exat path=\"/tests/test\" element={<PrivateRoute />}>\r\n          <Route path=\"/tests/test\" element={<ActiveTest />} />\r\n        </Route>\r\n        <Route exat path=\"/clients/test\" element={<PrivateRoute />}>\r\n          <Route path=\"/clients/test\" element={<ClientResults />} />\r\n        </Route>\r\n      </Routes>\r\n\r\n      \r\n      <Error />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { createReducer } from \"@reduxjs/toolkit\";\r\n\r\nimport {\r\n  signUpRequest,\r\n  signUpSuccess,\r\n  signUpError,\r\n  signInRequest,\r\n  signInSuccess,\r\n  signInError,\r\n  resetError,\r\n  refreshSessionRequest,\r\n  refreshSessionSuccess,\r\n  refreshSessionError,\r\n  getClientsRequest,\r\n  getClientsSuccess,\r\n  getClientsError,\r\n  removeClientRequest,\r\n  removeClientSuccess,\r\n  removeClientError,\r\n  addClientRequest,\r\n  addClientSuccess,\r\n  addClientError,\r\n  addTestRequest,\r\n  addTestSuccess,\r\n  addTestError,\r\n  editTestRequest,\r\n  editTestSuccess,\r\n  editTestError,\r\n  removeTestRequest,\r\n  removeTestSuccess,\r\n  removeTestError,\r\n  getTestsRequest,\r\n  getTestsSuccess,\r\n  getTestsError,\r\n  assignTestRequest,\r\n  assignTestSuccess,\r\n  assignTestError,\r\n  getActiveTestRequest,\r\n  getActiveTestSuccess,\r\n  getActiveTestError,\r\n  answerActiveTestRequest,\r\n  answerActiveTestSuccess,\r\n  answerActiveTestError,\r\n  clientTestsRequest,\r\n  clientTestsSuccess,\r\n  clientTestsError,\r\n  clientTestCommentRequest,\r\n  clientTestCommentSuccess,\r\n  clientTestCommentError,\r\n  logoutRequest,\r\n} from \"./user.actions\";\r\n\r\nexport const userReducer = createReducer(null, {\r\n  [signInSuccess]: (_, { payload }) => payload,\r\n  [refreshSessionError]: (_, __) => null,\r\n  [logoutRequest]: (_, __) => null,\r\n});\r\n\r\nexport const clientsReducer = createReducer(null, {\r\n  [getClientsSuccess]: (_, { payload }) => payload,\r\n  [logoutRequest]: (_, __) => null,\r\n});\r\n\r\nexport const testsReducer = createReducer(null, {\r\n  [getTestsSuccess]: (_, { payload }) => payload,\r\n  [logoutRequest]: (_, __) => null,\r\n});\r\n\r\nexport const clientTestsReducer = createReducer(null, {\r\n  [clientTestsSuccess]: (_, { payload }) => payload,\r\n  [logoutRequest]: (_, __) => null,\r\n});\r\n\r\nexport const activeTestReducer = createReducer(null, {\r\n  [getActiveTestSuccess]: (_, { payload }) => payload,\r\n  [logoutRequest]: (_, __) => null,\r\n});\r\n\r\nexport const errorMsg = createReducer(null, {\r\n  [resetError]: (_, __) => null,\r\n  [signUpError]: (_, { payload }) => payload,\r\n  [signInError]: (_, { payload }) => payload,\r\n  [getClientsError]: (_, { payload }) => payload,\r\n  [addClientError]: (_, { payload }) => payload,\r\n  [removeClientError]: (_, { payload }) => payload,\r\n  [addTestError]: (_, { payload }) => payload,\r\n  [editTestError]: (_, { payload }) => payload,\r\n  [removeTestError]: (_, { payload }) => payload,\r\n  [getTestsError]: (_, { payload }) => payload,\r\n  [assignTestError]: (_, { payload }) => payload,\r\n  [getActiveTestError]: (_, { payload }) => payload,\r\n  [answerActiveTestError]: (_, { payload }) => payload,\r\n  [clientTestsError]: (_, { payload }) => payload,\r\n  [clientTestCommentError]: (_, { payload }) => payload,\r\n});\r\n\r\nexport const loading = createReducer(false, {\r\n  [addTestRequest]: () => true,\r\n  [addTestSuccess]: () => false,\r\n  [addTestError]: () => false,\r\n  [clientTestsRequest]: () => true,\r\n  [clientTestsSuccess]: () => false,\r\n  [clientTestsError]: () => false,\r\n  [clientTestCommentRequest]: () => true,\r\n  [clientTestCommentSuccess]: () => false,\r\n  [clientTestCommentError]: () => false,\r\n  [answerActiveTestRequest]: () => true,\r\n  [answerActiveTestSuccess]: () => false,\r\n  [answerActiveTestError]: () => false,\r\n  [getActiveTestRequest]: () => true,\r\n  [getActiveTestSuccess]: () => false,\r\n  [getActiveTestError]: () => false,\r\n  [assignTestRequest]: () => true,\r\n  [assignTestSuccess]: () => false,\r\n  [assignTestError]: () => false,\r\n  [editTestRequest]: () => true,\r\n  [editTestSuccess]: () => false,\r\n  [editTestError]: () => false,\r\n  [removeTestRequest]: () => true,\r\n  [removeTestSuccess]: () => false,\r\n  [removeTestError]: () => false,\r\n  [getTestsRequest]: () => true,\r\n  [getTestsSuccess]: () => false,\r\n  [getTestsError]: () => false,\r\n  [getClientsRequest]: () => true,\r\n  [getClientsSuccess]: () => false,\r\n  [getClientsError]: () => false,\r\n  [removeClientRequest]: () => true,\r\n  [removeClientSuccess]: () => false,\r\n  [removeClientError]: () => false,\r\n  [addClientRequest]: () => true,\r\n  [addClientSuccess]: () => false,\r\n  [addClientError]: () => false,\r\n  [signUpRequest]: () => true,\r\n  [signUpSuccess]: () => false,\r\n  [signUpError]: () => false,\r\n  [signInRequest]: () => true,\r\n  [signInSuccess]: () => false,\r\n  [signInError]: () => false,\r\n});\r\n","import { combineReducers } from \"@reduxjs/toolkit\";\r\n\r\nimport {\r\n  userReducer,\r\n  clientsReducer,\r\n  testsReducer,\r\n  activeTestReducer,\r\n  loading,\r\n  errorMsg,\r\n  clientTestsReducer\r\n} from \"./user/user.reducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n  user: userReducer,\r\n  clients: clientsReducer,\r\n  tests: testsReducer,\r\n  activeTest: activeTestReducer,\r\n  clientTests: clientTestsReducer,\r\n  errorMsg,\r\n  loading\r\n});\r\n\r\nexport default rootReducer;\r\n","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport rootReducer from \"./root.reducer\";\r\n\r\nconst store = configureStore({\r\n  reducer: rootReducer,\r\n});\r\n\r\nexport { store };\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport { store } from \"./redux/store\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <BrowserRouter>\r\n        <App />\r\n      </BrowserRouter>\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"authForm\":\"SignUp_authForm__2aw90\",\"header\":\"SignUp_header__1TNg6\",\"formHeader\":\"SignUp_formHeader__2FloO\",\"logo\":\"SignUp_logo__2jgLZ\",\"form\":\"SignUp_form__yVnSB\",\"label\":\"SignUp_label__20EHh\",\"nameField\":\"SignUp_nameField__2tief\",\"input\":\"SignUp_input__pW8er\",\"btn\":\"SignUp_btn__3PbLW\",\"iconError\":\"SignUp_iconError__2OgDV\",\"warning\":\"SignUp_warning__1q-qh\",\"flexSpiner\":\"SignUp_flexSpiner__39Aay\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"authForm\":\"SignIn_authForm__3aArM\",\"header\":\"SignIn_header__Fy2pY\",\"formHeader\":\"SignIn_formHeader__lr_Yh\",\"logo\":\"SignIn_logo__2mE_n\",\"form\":\"SignIn_form__3j1QI\",\"label\":\"SignIn_label__VefGK\",\"nameField\":\"SignIn_nameField__9kRs4\",\"input\":\"SignIn_input__24zqc\",\"btn\":\"SignIn_btn__3j-Ip\",\"iconError\":\"SignIn_iconError__2E6SY\",\"warning\":\"SignIn_warning__1xplt\",\"flexSpiner\":\"SignIn_flexSpiner__1SlAp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__23YrA\",\"logoHead\":\"Header_logoHead__2xtZC\",\"logOut\":\"Header_logOut__1yJCg\",\"rightSide\":\"Header_rightSide__2VhjH\",\"whatsAppSetting\":\"Header_whatsAppSetting__2FYCm\",\"whatsAppIcon\":\"Header_whatsAppIcon__LluUw\",\"connect\":\"Header_connect__3EhsP\",\"disconnect\":\"Header_disconnect__lU7yl\",\"loader\":\"Header_loader__Uhrc7\",\"flexSpiner\":\"Header_flexSpiner__3lZK9\",\"nav\":\"Header_nav__1egPa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"row\":\"Row_row__2SuZh\",\"header\":\"Row_header__2elGf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"flex\":\"BtnWhite_flex__2_EPb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"flex\":\"BtnBlue_flex__2CDk6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__HnEyq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"flex\":\"BtnRed_flex__3k7Ij\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"flex\":\"BtnGrey_flex__sgVAK\",\"icon\":\"BtnGrey_icon__Vu4uW\",\"name\":\"BtnGrey_name__34azT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"flexSpiner\":\"Clients_flexSpiner__2ZD23\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"flexSpiner\":\"Tests_flexSpiner__3ILJ2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"flexSpiner\":\"Tests_flexSpiner__1-fV0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"flexSpiner\":\"Tests_flexSpiner__t_b_a\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bgModal\":\"AddModal_bgModal__1DyjA\",\"form\":\"AddModal_form__s5rOB\",\"label\":\"AddModal_label__1ss-F\",\"labelMsg\":\"AddModal_labelMsg__2eTJx\",\"msg\":\"AddModal_msg__1pshR\",\"nameField\":\"AddModal_nameField__2KrpE\",\"input\":\"AddModal_input__GKyeH\",\"inputMsg\":\"AddModal_inputMsg__zG67f\",\"message\":\"AddModal_message__gDmLd\",\"icon\":\"AddModal_icon__2I-bA\",\"head\":\"AddModal_head__1Vdft\",\"btnFlex\":\"AddModal_btnFlex__11EJn\",\"iconName\":\"AddModal_iconName__uflBE\"};"],"sourceRoot":""}